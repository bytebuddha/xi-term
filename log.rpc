2020-06-01T12:36:23.647012589-05:00 TRACE xrl::protocol::codec - >>> {"method":"client_started","params":{"config_dir":"/home/bytebuddha/.config/xi/"}}
2020-06-01T12:36:23.655502263-05:00 TRACE xrl::protocol::codec - >>> {"id":1,"method":"new_view","params":{"file_path":"src/lib.rs"}}
2020-06-01T12:36:23.657144682-05:00 TRACE xrl::protocol::codec - <<< {"method":"available_languages","params":{"languages":["ASP","ActionScript","AppleScript","Batch File","BibTeX","Bourne Again Shell (bash)","C","C#","C++","CSS","Clojure","D","Diff","Erlang","Git Attributes","Git Commit","Git Config","Git Ignore","Git Link","Git Log","Git Rebase Todo","Go","Graphviz (DOT)","Groovy","HTML","HTML (ASP)","HTML (Erlang)","HTML (Rails)","HTML (Tcl)","Haskell","JSON","Java","Java Properties","Java Server Page (JSP)","JavaScript","JavaScript (Rails)","LaTeX","Lisp","Literate Haskell","Lua","MATLAB","Makefile","Markdown","NAnt Build File","OCaml","OCamllex","OCamlyacc","Objective-C","Objective-C++","PHP","Pascal","Perl","Plain Text","Python","R","Rd (R Documentation)","Regular Expression","Ruby","Ruby Haml","Ruby on Rails","Rust","SQL","SQL (Rails)","Scala","TOML","Tcl","TeX","Textile","XML","YAML","reStructuredText"]}}
2020-06-01T12:36:23.660758519-05:00 TRACE xrl::protocol::codec - <<< {"method":"available_themes","params":{"themes":["InspiredGitHub","Solarized (dark)","Solarized (light)","base16-eighties.dark","base16-mocha.dark","base16-ocean.dark","base16-ocean.light"]}}
2020-06-01T12:36:23.661897923-05:00 TRACE xrl::protocol::codec - <<< {"id":1,"result":"view-id-2"}
2020-06-01T12:36:23.662263529-05:00 TRACE xrl::protocol::codec - <<< {"method":"available_plugins","params":{"plugins":[],"view_id":"view-id-2"}}
2020-06-01T12:36:23.664050842-05:00 TRACE xrl::protocol::codec - <<< {"method":"config_changed","params":{"changes":{"auto_indent":true,"autodetect_whitespace":true,"font_face":"InconsolataGo","font_size":14,"line_ending":"\n","plugin_search_path":[],"save_with_newline":true,"scroll_past_end":false,"surrounding_pairs":[["\"","\""],["'","'"],["{","}"],["[","]"]],"tab_size":4,"translate_tabs_to_spaces":true,"use_tab_stops":true,"word_wrap":false,"wrap_width":0},"view_id":"view-id-2"}}
2020-06-01T12:36:23.666054563-05:00 TRACE xrl::protocol::codec - <<< {"method":"language_changed","params":{"language_id":"Rust","view_id":"view-id-2"}}
2020-06-01T12:36:23.666619681-05:00 TRACE xrl::protocol::codec - <<< {"method":"update","params":{"update":{"annotations":[{"n":1,"payloads":null,"ranges":[[0,0,0,0]],"type":"selection"}],"ops":[{"lines":[{"cursor":[0],"ln":1,"styles":[],"text":"#![cfg_attr(feature = \"clippy\", feature(plugin))]\n"},{"ln":2,"styles":[],"text":"#![cfg_attr(feature = \"clippy\", plugin(clippy))]\n"},{"ln":3,"styles":[],"text":"#![cfg_attr(feature = \"clippy\", deny(clippy))]\n"},{"ln":4,"styles":[],"text":"\n"},{"ln":5,"styles":[],"text":"#[macro_use]\n"},{"ln":6,"styles":[],"text":"extern crate clap;\n"},{"ln":7,"styles":[],"text":"\n"},{"ln":8,"styles":[],"text":"extern crate failure;\n"},{"ln":9,"styles":[],"text":"\n"},{"ln":10,"styles":[],"text":"#[macro_use]\n"},{"ln":11,"styles":[],"text":"extern crate log;\n"},{"ln":12,"styles":[],"text":"extern crate log4rs;\n"}],"n":12,"op":"ins"},{"n":74,"op":"invalidate"}],"pristine":true},"view_id":"view-id-2"}}
2020-06-01T12:36:23.670409227-05:00 TRACE xrl::protocol::codec - <<< {"method":"scroll_to","params":{"col":0,"line":0,"view_id":"view-id-2"}}
2020-06-01T12:36:23.676064527-05:00 TRACE xrl::protocol::codec - >>> {"method":"edit","params":{"method":"scroll","params":[0,52],"view_id":"view-id-2"}}
2020-06-01T12:36:23.677507598-05:00 TRACE xrl::protocol::codec - <<< {"method":"update","params":{"update":{"annotations":[{"n":1,"payloads":null,"ranges":[[0,0,0,0]],"type":"selection"}],"ops":[{"ln":1,"n":12,"op":"copy"},{"lines":[{"ln":13,"styles":[],"text":"\n"},{"ln":14,"styles":[],"text":"extern crate futures;\n"},{"ln":15,"styles":[],"text":"extern crate indexmap;\n"},{"ln":16,"styles":[],"text":"extern crate crossterm;\n"},{"ln":17,"styles":[],"text":"extern crate tokio;\n"},{"ln":18,"styles":[],"text":"extern crate xdg;\n"},{"ln":19,"styles":[],"text":"extern crate xrl;\n"},{"ln":20,"styles":[],"text":"extern crate tui;\n"},{"ln":21,"styles":[],"text":"\n"},{"ln":22,"styles":[],"text":"pub mod core;\n"},{"ln":23,"styles":[],"text":"pub mod ui;\n"},{"ln":24,"styles":[],"text":"pub mod widgets;\n"},{"ln":25,"styles":[],"text":"pub mod components;\n"},{"ln":26,"styles":[],"text":"\n"},{"ln":27,"styles":[],"text":"pub use failure::Error;\n"},{"ln":28,"styles":[],"text":"use futures::{future, Future, Stream};\n"},{"ln":29,"styles":[],"text":"use xrl::spawn;\n"},{"ln":30,"styles":[],"text":"\n"},{"ln":31,"styles":[],"text":"use ui::{XiTerm, XiTermServiceBuilder};\n"},{"ln":32,"styles":[],"text":"\n"},{"ln":33,"styles":[],"text":"pub fn run() -> Result<(), Error> {\n"},{"ln":34,"styles":[],"text":"    let xi = clap_app!(\n"},{"ln":35,"styles":[],"text":"        xi =>\n"},{"ln":36,"styles":[],"text":"        (about: \"The Xi Editor\")\n"},{"ln":37,"styles":[],"text":"        (@arg core: -c --core +takes_value \"Specify binary to use for the backend\")\n"},{"ln":38,"styles":[],"text":"        (@arg logfile: -l --logfile +takes_value \"Log file location\")\n"},{"ln":39,"styles":[],"text":"        (@arg file: +required \"File to edit\"));\n"},{"ln":40,"styles":[],"text":"\n"},{"ln":41,"styles":[],"text":"    let matches = xi.get_matches();\n"},{"ln":42,"styles":[],"text":"    if let Some(logfile) = matches.value_of(\"logfile\") {\n"},{"ln":43,"styles":[],"text":"        core::configure_logs(logfile);\n"},{"ln":44,"styles":[],"text":"    }\n"},{"ln":45,"styles":[],"text":"    core::init_panic_handler();\n"},{"ln":46,"styles":[],"text":"\n"},{"ln":47,"styles":[],"text":"    tokio::run(future::lazy(move || {\n"},{"ln":48,"styles":[],"text":"        info!(\"starting xi-core\");\n"},{"ln":49,"styles":[],"text":"        let (tui_service_builder, core_events_rx) = XiTermServiceBuilder::new();\n"},{"ln":50,"styles":[],"text":"        let (client, core_stderr) = spawn(\n"},{"ln":51,"styles":[],"text":"            matches.value_of(\"core\").unwrap_or(\"xi-core\"),\n"},{"ln":52,"styles":[],"text":"            tui_service_builder,\n"},{"ln":53,"styles":[],"text":"        ).unwrap();\n"},{"ln":54,"styles":[],"text":"\n"}],"n":42,"op":"ins"},{"n":32,"op":"invalidate"}],"pristine":true},"view_id":"view-id-2"}}
2020-06-01T12:36:23.738467019-05:00 TRACE xrl::protocol::codec - <<< {"method":"update","params":{"update":{"annotations":[{"n":1,"payloads":null,"ranges":[[0,0,0,0]],"type":"selection"}],"ops":[{"ln":1,"n":86,"op":"copy"}],"pristine":true},"view_id":"view-id-2"}}
2020-06-01T12:36:23.739464580-05:00 TRACE xrl::protocol::codec - <<< {"method":"def_style","params":{"fg_color":4281479730,"id":8}}
2020-06-01T12:36:23.740066307-05:00 TRACE xrl::protocol::codec - <<< {"method":"def_style","params":{"fg_color":4281479730,"id":9}}
2020-06-01T12:36:23.740524616-05:00 TRACE xrl::protocol::codec - <<< {"method":"def_style","params":{"fg_color":4289142109,"id":10,"weight":700}}
2020-06-01T12:36:23.741025986-05:00 TRACE xrl::protocol::codec - <<< {"method":"def_style","params":{"fg_color":4279776913,"id":11}}
2020-06-01T12:36:23.741529302-05:00 TRACE xrl::protocol::codec - <<< {"method":"update","params":{"update":{"annotations":[{"n":1,"payloads":null,"ranges":[[0,0,0,0]],"type":"selection"}],"ops":[{"lines":[{"cursor":[0],"ln":1,"styles":[0,3,8,0,8,9,0,9,8,0,1,10,0,1,8,0,8,11,0,2,8,0,7,9,0,11,8],"text":"#![cfg_attr(feature = \"clippy\", feature(plugin))]\n"},{"ln":2,"styles":[0,3,8,0,8,9,0,9,8,0,1,10,0,1,8,0,8,11,0,2,8,0,6,9,0,11,8],"text":"#![cfg_attr(feature = \"clippy\", plugin(clippy))]\n"},{"ln":3,"styles":[0,3,8,0,8,9,0,9,8,0,1,10,0,1,8,0,8,11,0,2,8,0,4,9,0,11,8],"text":"#![cfg_attr(feature = \"clippy\", deny(clippy))]\n"},{"ln":4,"styles":[0,1,8],"text":"\n"},{"ln":5,"styles":[0,2,8,0,9,9,0,2,8],"text":"#[macro_use]\n"},{"ln":6,"styles":[0,6,10,0,1,8,0,5,10,0,7,8],"text":"extern crate clap;\n"},{"ln":7,"styles":[0,1,8],"text":"\n"},{"ln":8,"styles":[0,6,10,0,1,8,0,5,10,0,10,8],"text":"extern crate failure;\n"},{"ln":9,"styles":[0,1,8],"text":"\n"},{"ln":10,"styles":[0,2,8,0,9,9,0,2,8],"text":"#[macro_use]\n"}],"n":10,"op":"ins"},{"n":10,"op":"skip"},{"ln":11,"n":44,"op":"copy"},{"n":32,"op":"invalidate"}],"pristine":true},"view_id":"view-id-2"}}
2020-06-01T12:36:23.744597240-05:00 TRACE xrl::protocol::codec - <<< {"method":"update","params":{"update":{"annotations":[{"n":1,"payloads":null,"ranges":[[0,0,0,0]],"type":"selection"}],"ops":[{"ln":1,"n":10,"op":"copy"},{"lines":[{"ln":11,"styles":[0,6,10,0,1,8,0,5,10,0,6,8],"text":"extern crate log;\n"},{"ln":12,"styles":[0,6,10,0,1,8,0,5,10,0,9,8],"text":"extern crate log4rs;\n"},{"ln":13,"styles":[0,1,8],"text":"\n"},{"ln":14,"styles":[0,6,10,0,1,8,0,5,10,0,10,8],"text":"extern crate futures;\n"},{"ln":15,"styles":[0,6,10,0,1,8,0,5,10,0,11,8],"text":"extern crate indexmap;\n"},{"ln":16,"styles":[0,6,10,0,1,8,0,5,10,0,12,8],"text":"extern crate crossterm;\n"},{"ln":17,"styles":[0,6,10,0,1,8,0,5,10,0,8,8],"text":"extern crate tokio;\n"},{"ln":18,"styles":[0,6,10,0,1,8,0,5,10,0,6,8],"text":"extern crate xdg;\n"},{"ln":19,"styles":[0,6,10,0,1,8,0,5,10,0,6,8],"text":"extern crate xrl;\n"},{"ln":20,"styles":[0,6,10,0,1,8,0,5,10,0,6,8],"text":"extern crate tui;\n"}],"n":10,"op":"ins"},{"n":10,"op":"skip"},{"ln":21,"n":34,"op":"copy"},{"n":32,"op":"invalidate"}],"pristine":true},"view_id":"view-id-2"}}
2020-06-01T12:36:23.748344094-05:00 TRACE xrl::protocol::codec - <<< {"method":"update","params":{"update":{"annotations":[{"n":1,"payloads":null,"ranges":[[0,0,0,0]],"type":"selection"}],"ops":[{"ln":1,"n":86,"op":"copy"}],"pristine":true},"view_id":"view-id-2"}}
2020-06-01T12:36:23.749230602-05:00 TRACE xrl::protocol::codec - <<< {"method":"update","params":{"update":{"annotations":[{"n":1,"payloads":null,"ranges":[[0,0,0,0]],"type":"selection"}],"ops":[{"ln":1,"n":20,"op":"copy"},{"lines":[{"ln":21,"styles":[0,1,8],"text":"\n"},{"ln":22,"styles":[0,3,10,0,1,8,0,3,10,0,7,8],"text":"pub mod core;\n"},{"ln":23,"styles":[0,3,10,0,1,8,0,3,10,0,5,8],"text":"pub mod ui;\n"},{"ln":24,"styles":[0,3,10,0,1,8,0,3,10,0,10,8],"text":"pub mod widgets;\n"},{"ln":25,"styles":[0,3,10,0,1,8,0,3,10,0,13,8],"text":"pub mod components;\n"},{"ln":26,"styles":[0,1,8],"text":"\n"},{"ln":27,"styles":[0,3,10,0,1,8,0,3,10,0,17,8],"text":"pub use failure::Error;\n"},{"ln":28,"styles":[0,3,10,0,36,8],"text":"use futures::{future, Future, Stream};\n"},{"ln":29,"styles":[0,3,10,0,13,8],"text":"use xrl::spawn;\n"},{"ln":30,"styles":[0,1,8],"text":"\n"}],"n":10,"op":"ins"},{"n":10,"op":"skip"},{"ln":31,"n":24,"op":"copy"},{"n":32,"op":"invalidate"}],"pristine":true},"view_id":"view-id-2"}}
2020-06-01T12:36:23.752866836-05:00 TRACE xrl::protocol::codec - <<< {"method":"update","params":{"update":{"annotations":[{"n":1,"payloads":null,"ranges":[[0,0,0,0]],"type":"selection"}],"ops":[{"ln":1,"n":86,"op":"copy"}],"pristine":true},"view_id":"view-id-2"}}
2020-06-01T12:36:23.754430617-05:00 TRACE xrl::protocol::codec - <<< {"method":"def_style","params":{"fg_color":4286143907,"id":12,"weight":700}}
2020-06-01T12:36:23.754903816-05:00 TRACE xrl::protocol::codec - <<< {"method":"def_style","params":{"fg_color":4278224563,"id":13}}
2020-06-01T12:36:23.755404176-05:00 TRACE xrl::protocol::codec - <<< {"method":"update","params":{"update":{"annotations":[{"n":1,"payloads":null,"ranges":[[0,0,0,0]],"type":"selection"}],"ops":[{"ln":1,"n":30,"op":"copy"},{"lines":[{"ln":31,"styles":[0,3,10,0,37,8],"text":"use ui::{XiTerm, XiTermServiceBuilder};\n"},{"ln":32,"styles":[0,1,8],"text":"\n"},{"ln":33,"styles":[0,3,10,0,1,8,0,2,10,0,1,8,0,3,12,0,6,8,0,6,13,0,14,8],"text":"pub fn run() -> Result<(), Error> {\n"},{"ln":34,"styles":[0,4,8,0,3,10,0,4,8,0,1,10,0,12,8],"text":"    let xi = clap_app!(\n"},{"ln":35,"styles":[0,11,8,0,2,10,0,1,8],"text":"        xi =>\n"},{"ln":36,"styles":[0,16,8,0,15,11,0,2,8],"text":"        (about: \"The Xi Editor\")\n"},{"ln":37,"styles":[0,9,8,0,1,10,0,10,8,0,1,10,0,2,8,0,2,10,0,5,8,0,1,10,0,12,8,0,39,11,0,2,8],"text":"        (@arg core: -c --core +takes_value \"Specify binary to use for the backend\")\n"},{"ln":38,"styles":[0,9,8,0,1,10,0,13,8,0,1,10,0,2,8,0,2,10,0,8,8,0,1,10,0,12,8,0,19,11,0,2,8],"text":"        (@arg logfile: -l --logfile +takes_value \"Log file location\")\n"},{"ln":39,"styles":[0,9,8,0,1,10,0,10,8,0,1,10,0,9,8,0,14,11,0,4,8],"text":"        (@arg file: +required \"File to edit\"));\n"},{"ln":40,"styles":[0,1,8],"text":"\n"}],"n":10,"op":"ins"},{"n":10,"op":"skip"},{"ln":41,"n":14,"op":"copy"},{"n":32,"op":"invalidate"}],"pristine":true},"view_id":"view-id-2"}}
2020-06-01T12:36:23.758498834-05:00 TRACE xrl::protocol::codec - <<< {"method":"update","params":{"update":{"annotations":[{"n":1,"payloads":null,"ranges":[[0,0,0,0]],"type":"selection"}],"ops":[{"ln":1,"n":86,"op":"copy"}],"pristine":true},"view_id":"view-id-2"}}
2020-06-01T12:36:23.759379791-05:00 TRACE xrl::protocol::codec - <<< {"method":"def_style","params":{"fg_color":4284654428,"id":14}}
2020-06-01T12:36:23.759950153-05:00 TRACE xrl::protocol::codec - <<< {"method":"update","params":{"update":{"annotations":[{"n":1,"payloads":null,"ranges":[[0,0,0,0]],"type":"selection"}],"ops":[{"ln":1,"n":40,"op":"copy"},{"lines":[{"ln":41,"styles":[0,4,8,0,3,10,0,9,8,0,1,10,0,4,8,0,11,14,0,4,8],"text":"    let matches = xi.get_matches();\n"},{"ln":42,"styles":[0,4,8,0,2,10,0,1,8,0,3,10,0,1,8,0,4,13,0,10,8,0,1,10,0,9,8,0,8,14,0,1,8,0,9,11,0,4,8],"text":"    if let Some(logfile) = matches.value_of(\"logfile\") {\n"},{"ln":43,"styles":[0,39,8],"text":"        core::configure_logs(logfile);\n"},{"ln":44,"styles":[0,6,8],"text":"    }\n"},{"ln":45,"styles":[0,32,8],"text":"    core::init_panic_handler();\n"},{"ln":46,"styles":[0,1,8],"text":"\n"},{"ln":47,"styles":[0,28,8,0,4,10,0,1,8,0,2,10,0,3,8],"text":"    tokio::run(future::lazy(move || {\n"},{"ln":48,"styles":[0,14,8,0,18,11,0,3,8],"text":"        info!(\"starting xi-core\");\n"},{"ln":49,"styles":[0,8,8,0,3,10,0,39,8,0,1,10,0,30,8],"text":"        let (tui_service_builder, core_events_rx) = XiTermServiceBuilder::new();\n"},{"ln":50,"styles":[0,8,8,0,3,10,0,23,8,0,1,10,0,1,8,0,5,14,0,2,8],"text":"        let (client, core_stderr) = spawn(\n"}],"n":10,"op":"ins"},{"n":10,"op":"skip"},{"ln":51,"n":4,"op":"copy"},{"n":32,"op":"invalidate"}],"pristine":true},"view_id":"view-id-2"}}
2020-06-01T12:36:23.762925713-05:00 TRACE xrl::protocol::codec - <<< {"method":"update","params":{"update":{"annotations":[{"n":1,"payloads":null,"ranges":[[0,0,0,0]],"type":"selection"}],"ops":[{"ln":1,"n":86,"op":"copy"}],"pristine":true},"view_id":"view-id-2"}}
2020-06-01T12:36:23.763824754-05:00 TRACE xrl::protocol::codec - <<< {"method":"update","params":{"update":{"annotations":[{"n":1,"payloads":null,"ranges":[[0,0,0,0]],"type":"selection"}],"ops":[{"ln":1,"n":50,"op":"copy"},{"lines":[{"ln":51,"styles":[0,20,8,0,8,14,0,1,8,0,6,11,0,2,8,0,9,14,0,1,8,0,9,11,0,3,8],"text":"            matches.value_of(\"core\").unwrap_or(\"xi-core\"),\n"},{"ln":52,"styles":[0,33,8],"text":"            tui_service_builder,\n"},{"ln":53,"styles":[0,10,8,0,6,14,0,4,8],"text":"        ).unwrap();\n"},{"ln":54,"styles":[0,1,8],"text":"\n"}],"n":4,"op":"ins"},{"n":32,"op":"invalidate"}],"pristine":true},"view_id":"view-id-2"}}
2020-06-01T12:36:23.765788936-05:00 TRACE xrl::protocol::codec - <<< {"method":"update","params":{"update":{"annotations":[{"n":1,"payloads":null,"ranges":[[0,0,0,0]],"type":"selection"}],"ops":[{"ln":1,"n":86,"op":"copy"}],"pristine":true},"view_id":"view-id-2"}}
2020-06-01T12:36:23.766593893-05:00 TRACE xrl::protocol::codec - <<< {"method":"update","params":{"update":{"annotations":[{"n":1,"payloads":null,"ranges":[[0,0,0,0]],"type":"selection"}],"ops":[{"ln":1,"n":86,"op":"copy"}],"pristine":true},"view_id":"view-id-2"}}
2020-06-01T12:36:23.767468945-05:00 TRACE xrl::protocol::codec - <<< {"method":"update","params":{"update":{"annotations":[{"n":1,"payloads":null,"ranges":[[0,0,0,0]],"type":"selection"}],"ops":[{"ln":1,"n":86,"op":"copy"}],"pristine":true},"view_id":"view-id-2"}}
2020-06-01T12:36:23.768283371-05:00 TRACE xrl::protocol::codec - <<< {"method":"update","params":{"update":{"annotations":[{"n":1,"payloads":null,"ranges":[[0,0,0,0]],"type":"selection"}],"ops":[{"ln":1,"n":86,"op":"copy"}],"pristine":true},"view_id":"view-id-2"}}
2020-06-01T12:36:23.769107813-05:00 TRACE xrl::protocol::codec - <<< {"method":"update","params":{"update":{"annotations":[{"n":1,"payloads":null,"ranges":[[0,0,0,0]],"type":"selection"}],"ops":[{"ln":1,"n":86,"op":"copy"}],"pristine":true},"view_id":"view-id-2"}}
2020-06-01T12:36:23.769895004-05:00 TRACE xrl::protocol::codec - <<< {"method":"update","params":{"update":{"annotations":[{"n":1,"payloads":null,"ranges":[[0,0,0,0]],"type":"selection"}],"ops":[{"ln":1,"n":86,"op":"copy"}],"pristine":true},"view_id":"view-id-2"}}
2020-06-01T12:36:25.308398717-05:00 TRACE xrl::protocol::codec - >>> {"method":"edit","params":{"method":"insert","params":{"chars":"s"},"view_id":"view-id-2"}}
2020-06-01T12:36:25.312748997-05:00 TRACE xrl::protocol::codec - <<< {"method":"update","params":{"update":{"annotations":[{"n":1,"payloads":null,"ranges":[[0,1,0,1]],"type":"selection"}],"ops":[{"lines":[{"cursor":[1],"ln":1,"styles":[0,4,8,0,8,9,0,9,8,0,1,10,0,1,8,0,8,11,0,2,8,0,7,9,0,11,8],"text":"s#![cfg_attr(feature = \"clippy\", feature(plugin))]\n"}],"n":1,"op":"ins"},{"n":1,"op":"skip"},{"ln":2,"n":53,"op":"copy"},{"n":32,"op":"invalidate"}],"pristine":false},"view_id":"view-id-2"}}
2020-06-01T12:36:25.317365251-05:00 TRACE xrl::protocol::codec - <<< {"method":"scroll_to","params":{"col":1,"line":0,"view_id":"view-id-2"}}
2020-06-01T12:36:25.423588337-05:00 TRACE xrl::protocol::codec - >>> {"method":"edit","params":{"method":"insert","params":{"chars":"o"},"view_id":"view-id-2"}}
2020-06-01T12:36:25.427929872-05:00 TRACE xrl::protocol::codec - <<< {"method":"update","params":{"update":{"annotations":[{"n":1,"payloads":null,"ranges":[[0,2,0,2]],"type":"selection"}],"ops":[{"lines":[{"cursor":[2],"ln":1,"styles":[0,5,8,0,8,9,0,9,8,0,1,10,0,1,8,0,8,11,0,2,8,0,7,9,0,11,8],"text":"so#![cfg_attr(feature = \"clippy\", feature(plugin))]\n"}],"n":1,"op":"ins"},{"n":1,"op":"skip"},{"ln":2,"n":53,"op":"copy"},{"n":32,"op":"invalidate"}],"pristine":false},"view_id":"view-id-2"}}
2020-06-01T12:36:25.432437523-05:00 TRACE xrl::protocol::codec - <<< {"method":"scroll_to","params":{"col":2,"line":0,"view_id":"view-id-2"}}
2020-06-01T12:36:25.506718675-05:00 TRACE xrl::protocol::codec - >>> {"method":"edit","params":{"method":"insert","params":{"chars":"m"},"view_id":"view-id-2"}}
2020-06-01T12:36:25.509688287-05:00 TRACE xrl::protocol::codec - <<< {"method":"update","params":{"update":{"annotations":[{"n":1,"payloads":null,"ranges":[[0,3,0,3]],"type":"selection"}],"ops":[{"lines":[{"cursor":[3],"ln":1,"styles":[0,6,8,0,8,9,0,9,8,0,1,10,0,1,8,0,8,11,0,2,8,0,7,9,0,11,8],"text":"som#![cfg_attr(feature = \"clippy\", feature(plugin))]\n"}],"n":1,"op":"ins"},{"n":1,"op":"skip"},{"ln":2,"n":53,"op":"copy"},{"n":32,"op":"invalidate"}],"pristine":false},"view_id":"view-id-2"}}
2020-06-01T12:36:25.511219473-05:00 TRACE xrl::protocol::codec - <<< {"method":"scroll_to","params":{"col":3,"line":0,"view_id":"view-id-2"}}
2020-06-01T12:36:25.636779039-05:00 TRACE xrl::protocol::codec - >>> {"method":"edit","params":{"method":"insert","params":{"chars":"e"},"view_id":"view-id-2"}}
2020-06-01T12:36:25.641883756-05:00 TRACE xrl::protocol::codec - <<< {"method":"update","params":{"update":{"annotations":[{"n":1,"payloads":null,"ranges":[[0,4,0,4]],"type":"selection"}],"ops":[{"lines":[{"cursor":[4],"ln":1,"styles":[0,7,8,0,8,9,0,9,8,0,1,10,0,1,8,0,8,11,0,2,8,0,7,9,0,11,8],"text":"some#![cfg_attr(feature = \"clippy\", feature(plugin))]\n"}],"n":1,"op":"ins"},{"n":1,"op":"skip"},{"ln":2,"n":53,"op":"copy"},{"n":32,"op":"invalidate"}],"pristine":false},"view_id":"view-id-2"}}
2020-06-01T12:36:25.644972911-05:00 TRACE xrl::protocol::codec - <<< {"method":"scroll_to","params":{"col":4,"line":0,"view_id":"view-id-2"}}
2020-06-01T12:36:25.747713998-05:00 TRACE xrl::protocol::codec - >>> {"method":"edit","params":{"method":"insert","params":{"chars":"t"},"view_id":"view-id-2"}}
2020-06-01T12:36:25.751850906-05:00 TRACE xrl::protocol::codec - <<< {"method":"update","params":{"update":{"annotations":[{"n":1,"payloads":null,"ranges":[[0,5,0,5]],"type":"selection"}],"ops":[{"lines":[{"cursor":[5],"ln":1,"styles":[0,8,8,0,8,9,0,9,8,0,1,10,0,1,8,0,8,11,0,2,8,0,7,9,0,11,8],"text":"somet#![cfg_attr(feature = \"clippy\", feature(plugin))]\n"}],"n":1,"op":"ins"},{"n":1,"op":"skip"},{"ln":2,"n":53,"op":"copy"},{"n":32,"op":"invalidate"}],"pristine":false},"view_id":"view-id-2"}}
2020-06-01T12:36:25.754132511-05:00 TRACE xrl::protocol::codec - <<< {"method":"scroll_to","params":{"col":5,"line":0,"view_id":"view-id-2"}}
2020-06-01T12:36:25.827733417-05:00 TRACE xrl::protocol::codec - >>> {"method":"edit","params":{"method":"insert","params":{"chars":"h"},"view_id":"view-id-2"}}
2020-06-01T12:36:25.831306625-05:00 TRACE xrl::protocol::codec - <<< {"method":"update","params":{"update":{"annotations":[{"n":1,"payloads":null,"ranges":[[0,6,0,6]],"type":"selection"}],"ops":[{"lines":[{"cursor":[6],"ln":1,"styles":[0,9,8,0,8,9,0,9,8,0,1,10,0,1,8,0,8,11,0,2,8,0,7,9,0,11,8],"text":"someth#![cfg_attr(feature = \"clippy\", feature(plugin))]\n"}],"n":1,"op":"ins"},{"n":1,"op":"skip"},{"ln":2,"n":53,"op":"copy"},{"n":32,"op":"invalidate"}],"pristine":false},"view_id":"view-id-2"}}
2020-06-01T12:36:25.832843558-05:00 TRACE xrl::protocol::codec - <<< {"method":"scroll_to","params":{"col":6,"line":0,"view_id":"view-id-2"}}
2020-06-01T12:36:25.911361688-05:00 TRACE xrl::protocol::codec - >>> {"method":"edit","params":{"method":"insert","params":{"chars":"i"},"view_id":"view-id-2"}}
2020-06-01T12:36:25.916169426-05:00 TRACE xrl::protocol::codec - <<< {"method":"update","params":{"update":{"annotations":[{"n":1,"payloads":null,"ranges":[[0,7,0,7]],"type":"selection"}],"ops":[{"lines":[{"cursor":[7],"ln":1,"styles":[0,10,8,0,8,9,0,9,8,0,1,10,0,1,8,0,8,11,0,2,8,0,7,9,0,11,8],"text":"somethi#![cfg_attr(feature = \"clippy\", feature(plugin))]\n"}],"n":1,"op":"ins"},{"n":1,"op":"skip"},{"ln":2,"n":53,"op":"copy"},{"n":32,"op":"invalidate"}],"pristine":false},"view_id":"view-id-2"}}
2020-06-01T12:36:25.919636482-05:00 TRACE xrl::protocol::codec - <<< {"method":"scroll_to","params":{"col":7,"line":0,"view_id":"view-id-2"}}
2020-06-01T12:36:26.001192582-05:00 TRACE xrl::protocol::codec - >>> {"method":"edit","params":{"method":"insert","params":{"chars":"n"},"view_id":"view-id-2"}}
2020-06-01T12:36:26.004584629-05:00 TRACE xrl::protocol::codec - <<< {"method":"update","params":{"update":{"annotations":[{"n":1,"payloads":null,"ranges":[[0,8,0,8]],"type":"selection"}],"ops":[{"lines":[{"cursor":[8],"ln":1,"styles":[0,11,8,0,8,9,0,9,8,0,1,10,0,1,8,0,8,11,0,2,8,0,7,9,0,11,8],"text":"somethin#![cfg_attr(feature = \"clippy\", feature(plugin))]\n"}],"n":1,"op":"ins"},{"n":1,"op":"skip"},{"ln":2,"n":53,"op":"copy"},{"n":32,"op":"invalidate"}],"pristine":false},"view_id":"view-id-2"}}
2020-06-01T12:36:26.006067557-05:00 TRACE xrl::protocol::codec - <<< {"method":"scroll_to","params":{"col":8,"line":0,"view_id":"view-id-2"}}
2020-06-01T12:36:26.057586831-05:00 TRACE xrl::protocol::codec - >>> {"method":"edit","params":{"method":"insert","params":{"chars":"g"},"view_id":"view-id-2"}}
2020-06-01T12:36:26.061459153-05:00 TRACE xrl::protocol::codec - <<< {"method":"update","params":{"update":{"annotations":[{"n":1,"payloads":null,"ranges":[[0,9,0,9]],"type":"selection"}],"ops":[{"lines":[{"cursor":[9],"ln":1,"styles":[0,12,8,0,8,9,0,9,8,0,1,10,0,1,8,0,8,11,0,2,8,0,7,9,0,11,8],"text":"something#![cfg_attr(feature = \"clippy\", feature(plugin))]\n"}],"n":1,"op":"ins"},{"n":1,"op":"skip"},{"ln":2,"n":53,"op":"copy"},{"n":32,"op":"invalidate"}],"pristine":false},"view_id":"view-id-2"}}
2020-06-01T12:36:26.063723135-05:00 TRACE xrl::protocol::codec - <<< {"method":"scroll_to","params":{"col":9,"line":0,"view_id":"view-id-2"}}
2020-06-01T12:36:26.569754005-05:00 TRACE xrl::protocol::codec - >>> {"method":"edit","params":{"method":"insert","params":{"chars":"c"},"view_id":"view-id-2"}}
2020-06-01T12:40:06.820393323-05:00 TRACE xrl::protocol::codec - >>> {"method":"client_started","params":{"config_dir":"/home/bytebuddha/.config/xi/"}}
2020-06-01T12:40:06.832354031-05:00 TRACE xrl::protocol::codec - >>> {"id":1,"method":"new_view","params":{"file_path":"src/lib.rs"}}
2020-06-01T12:40:06.847618530-05:00 TRACE xrl::protocol::codec - <<< {"method":"available_languages","params":{"languages":["ASP","ActionScript","AppleScript","Batch File","BibTeX","Bourne Again Shell (bash)","C","C#","C++","CSS","Clojure","D","Diff","Erlang","Git Attributes","Git Commit","Git Config","Git Ignore","Git Link","Git Log","Git Rebase Todo","Go","Graphviz (DOT)","Groovy","HTML","HTML (ASP)","HTML (Erlang)","HTML (Rails)","HTML (Tcl)","Haskell","JSON","Java","Java Properties","Java Server Page (JSP)","JavaScript","JavaScript (Rails)","LaTeX","Lisp","Literate Haskell","Lua","MATLAB","Makefile","Markdown","NAnt Build File","OCaml","OCamllex","OCamlyacc","Objective-C","Objective-C++","PHP","Pascal","Perl","Plain Text","Python","R","Rd (R Documentation)","Regular Expression","Ruby","Ruby Haml","Ruby on Rails","Rust","SQL","SQL (Rails)","Scala","TOML","Tcl","TeX","Textile","XML","YAML","reStructuredText"]}}
2020-06-01T12:40:06.849435102-05:00 TRACE xrl::protocol::codec - <<< {"method":"available_themes","params":{"themes":["InspiredGitHub","Solarized (dark)","Solarized (light)","base16-eighties.dark","base16-mocha.dark","base16-ocean.dark","base16-ocean.light"]}}
2020-06-01T12:40:06.850247455-05:00 TRACE xrl::protocol::codec - <<< {"id":1,"result":"view-id-2"}
2020-06-01T12:40:06.850528524-05:00 TRACE xrl::protocol::codec - <<< {"method":"plugin_started","params":{"plugin":"xi-syntect-plugin","view_id":"view-id-2"}}
2020-06-01T12:40:06.851054022-05:00 TRACE xrl::protocol::codec - <<< {"method":"available_plugins","params":{"plugins":[{"name":"xi-syntect-plugin","running":true}],"view_id":"view-id-2"}}
2020-06-01T12:40:06.851665662-05:00 TRACE xrl::protocol::codec - <<< {"method":"config_changed","params":{"changes":{"auto_indent":true,"autodetect_whitespace":true,"font_face":"InconsolataGo","font_size":14,"line_ending":"\n","plugin_search_path":[],"save_with_newline":true,"scroll_past_end":false,"surrounding_pairs":[["\"","\""],["'","'"],["{","}"],["[","]"]],"tab_size":4,"translate_tabs_to_spaces":true,"use_tab_stops":true,"word_wrap":false,"wrap_width":0},"view_id":"view-id-2"}}
2020-06-01T12:40:06.852869330-05:00 TRACE xrl::protocol::codec - <<< {"method":"language_changed","params":{"language_id":"Rust","view_id":"view-id-2"}}
2020-06-01T12:40:06.853395657-05:00 TRACE xrl::protocol::codec - <<< {"method":"update","params":{"update":{"annotations":[{"n":1,"payloads":null,"ranges":[[0,0,0,0]],"type":"selection"}],"ops":[{"lines":[{"cursor":[0],"ln":1,"styles":[],"text":"#![cfg_attr(feature = \"clippy\", feature(plugin))]\n"},{"ln":2,"styles":[],"text":"#![cfg_attr(feature = \"clippy\", plugin(clippy))]\n"},{"ln":3,"styles":[],"text":"#![cfg_attr(feature = \"clippy\", deny(clippy))]\n"},{"ln":4,"styles":[],"text":"\n"},{"ln":5,"styles":[],"text":"#[macro_use]\n"},{"ln":6,"styles":[],"text":"extern crate clap;\n"},{"ln":7,"styles":[],"text":"\n"},{"ln":8,"styles":[],"text":"extern crate failure;\n"},{"ln":9,"styles":[],"text":"\n"},{"ln":10,"styles":[],"text":"#[macro_use]\n"},{"ln":11,"styles":[],"text":"extern crate log;\n"},{"ln":12,"styles":[],"text":"extern crate log4rs;\n"}],"n":12,"op":"ins"},{"n":74,"op":"invalidate"}],"pristine":true},"view_id":"view-id-2"}}
2020-06-01T12:40:06.855798868-05:00 TRACE xrl::protocol::codec - <<< {"method":"scroll_to","params":{"col":0,"line":0,"view_id":"view-id-2"}}
2020-06-01T12:40:06.867462725-05:00 TRACE xrl::protocol::codec - >>> {"method":"edit","params":{"method":"scroll","params":[0,52],"view_id":"view-id-2"}}
2020-06-01T12:40:06.869392739-05:00 TRACE xrl::protocol::codec - <<< {"method":"update","params":{"update":{"annotations":[{"n":1,"payloads":null,"ranges":[[0,0,0,0]],"type":"selection"}],"ops":[{"ln":1,"n":12,"op":"copy"},{"lines":[{"ln":13,"styles":[],"text":"\n"},{"ln":14,"styles":[],"text":"extern crate futures;\n"},{"ln":15,"styles":[],"text":"extern crate indexmap;\n"},{"ln":16,"styles":[],"text":"extern crate crossterm;\n"},{"ln":17,"styles":[],"text":"extern crate tokio;\n"},{"ln":18,"styles":[],"text":"extern crate xdg;\n"},{"ln":19,"styles":[],"text":"extern crate xrl;\n"},{"ln":20,"styles":[],"text":"extern crate tui;\n"},{"ln":21,"styles":[],"text":"\n"},{"ln":22,"styles":[],"text":"pub mod core;\n"},{"ln":23,"styles":[],"text":"pub mod ui;\n"},{"ln":24,"styles":[],"text":"pub mod widgets;\n"},{"ln":25,"styles":[],"text":"pub mod components;\n"},{"ln":26,"styles":[],"text":"\n"},{"ln":27,"styles":[],"text":"pub use failure::Error;\n"},{"ln":28,"styles":[],"text":"use futures::{future, Future, Stream};\n"},{"ln":29,"styles":[],"text":"use xrl::spawn;\n"},{"ln":30,"styles":[],"text":"\n"},{"ln":31,"styles":[],"text":"use ui::{XiTerm, XiTermServiceBuilder};\n"},{"ln":32,"styles":[],"text":"\n"},{"ln":33,"styles":[],"text":"pub fn run() -> Result<(), Error> {\n"},{"ln":34,"styles":[],"text":"    let xi = clap_app!(\n"},{"ln":35,"styles":[],"text":"        xi =>\n"},{"ln":36,"styles":[],"text":"        (about: \"The Xi Editor\")\n"},{"ln":37,"styles":[],"text":"        (@arg core: -c --core +takes_value \"Specify binary to use for the backend\")\n"},{"ln":38,"styles":[],"text":"        (@arg logfile: -l --logfile +takes_value \"Log file location\")\n"},{"ln":39,"styles":[],"text":"        (@arg file: +required \"File to edit\"));\n"},{"ln":40,"styles":[],"text":"\n"},{"ln":41,"styles":[],"text":"    let matches = xi.get_matches();\n"},{"ln":42,"styles":[],"text":"    if let Some(logfile) = matches.value_of(\"logfile\") {\n"},{"ln":43,"styles":[],"text":"        core::configure_logs(logfile);\n"},{"ln":44,"styles":[],"text":"    }\n"},{"ln":45,"styles":[],"text":"    core::init_panic_handler();\n"},{"ln":46,"styles":[],"text":"\n"},{"ln":47,"styles":[],"text":"    tokio::run(future::lazy(move || {\n"},{"ln":48,"styles":[],"text":"        info!(\"starting xi-core\");\n"},{"ln":49,"styles":[],"text":"        let (tui_service_builder, core_events_rx) = XiTermServiceBuilder::new();\n"},{"ln":50,"styles":[],"text":"        let (client, core_stderr) = spawn(\n"},{"ln":51,"styles":[],"text":"            matches.value_of(\"core\").unwrap_or(\"xi-core\"),\n"},{"ln":52,"styles":[],"text":"            tui_service_builder,\n"},{"ln":53,"styles":[],"text":"        ).unwrap();\n"},{"ln":54,"styles":[],"text":"\n"}],"n":42,"op":"ins"},{"n":32,"op":"invalidate"}],"pristine":true},"view_id":"view-id-2"}}
2020-06-01T12:40:06.888870771-05:00 TRACE xrl::protocol::codec - <<< {"method":"update","params":{"update":{"annotations":[{"n":1,"payloads":null,"ranges":[[0,0,0,0]],"type":"selection"}],"ops":[{"ln":1,"n":86,"op":"copy"}],"pristine":true},"view_id":"view-id-2"}}
2020-06-01T12:40:06.890170807-05:00 TRACE xrl::protocol::codec - <<< {"method":"def_style","params":{"fg_color":4281479730,"id":8}}
2020-06-01T12:40:06.890801172-05:00 TRACE xrl::protocol::codec - <<< {"method":"def_style","params":{"fg_color":4281479730,"id":9}}
2020-06-01T12:40:06.891441386-05:00 TRACE xrl::protocol::codec - <<< {"method":"def_style","params":{"fg_color":4289142109,"id":10,"weight":700}}
2020-06-01T12:40:06.892104822-05:00 TRACE xrl::protocol::codec - <<< {"method":"def_style","params":{"fg_color":4279776913,"id":11}}
2020-06-01T12:40:06.893145663-05:00 TRACE xrl::protocol::codec - <<< {"method":"update","params":{"update":{"annotations":[{"n":1,"payloads":null,"ranges":[[0,0,0,0]],"type":"selection"}],"ops":[{"lines":[{"cursor":[0],"ln":1,"styles":[0,3,8,0,8,9,0,9,8,0,1,10,0,1,8,0,8,11,0,2,8,0,7,9,0,11,8],"text":"#![cfg_attr(feature = \"clippy\", feature(plugin))]\n"},{"ln":2,"styles":[0,3,8,0,8,9,0,9,8,0,1,10,0,1,8,0,8,11,0,2,8,0,6,9,0,11,8],"text":"#![cfg_attr(feature = \"clippy\", plugin(clippy))]\n"},{"ln":3,"styles":[0,3,8,0,8,9,0,9,8,0,1,10,0,1,8,0,8,11,0,2,8,0,4,9,0,11,8],"text":"#![cfg_attr(feature = \"clippy\", deny(clippy))]\n"},{"ln":4,"styles":[0,1,8],"text":"\n"},{"ln":5,"styles":[0,2,8,0,9,9,0,2,8],"text":"#[macro_use]\n"},{"ln":6,"styles":[0,6,10,0,1,8,0,5,10,0,7,8],"text":"extern crate clap;\n"},{"ln":7,"styles":[0,1,8],"text":"\n"},{"ln":8,"styles":[0,6,10,0,1,8,0,5,10,0,10,8],"text":"extern crate failure;\n"},{"ln":9,"styles":[0,1,8],"text":"\n"},{"ln":10,"styles":[0,2,8,0,9,9,0,2,8],"text":"#[macro_use]\n"}],"n":10,"op":"ins"},{"n":10,"op":"skip"},{"ln":11,"n":44,"op":"copy"},{"n":32,"op":"invalidate"}],"pristine":true},"view_id":"view-id-2"}}
2020-06-01T12:40:06.897694359-05:00 TRACE xrl::protocol::codec - <<< {"method":"update","params":{"update":{"annotations":[{"n":1,"payloads":null,"ranges":[[0,0,0,0]],"type":"selection"}],"ops":[{"ln":1,"n":10,"op":"copy"},{"lines":[{"ln":11,"styles":[0,6,10,0,1,8,0,5,10,0,6,8],"text":"extern crate log;\n"},{"ln":12,"styles":[0,6,10,0,1,8,0,5,10,0,9,8],"text":"extern crate log4rs;\n"},{"ln":13,"styles":[0,1,8],"text":"\n"},{"ln":14,"styles":[0,6,10,0,1,8,0,5,10,0,10,8],"text":"extern crate futures;\n"},{"ln":15,"styles":[0,6,10,0,1,8,0,5,10,0,11,8],"text":"extern crate indexmap;\n"},{"ln":16,"styles":[0,6,10,0,1,8,0,5,10,0,12,8],"text":"extern crate crossterm;\n"},{"ln":17,"styles":[0,6,10,0,1,8,0,5,10,0,8,8],"text":"extern crate tokio;\n"},{"ln":18,"styles":[0,6,10,0,1,8,0,5,10,0,6,8],"text":"extern crate xdg;\n"},{"ln":19,"styles":[0,6,10,0,1,8,0,5,10,0,6,8],"text":"extern crate xrl;\n"},{"ln":20,"styles":[0,6,10,0,1,8,0,5,10,0,6,8],"text":"extern crate tui;\n"}],"n":10,"op":"ins"},{"n":10,"op":"skip"},{"ln":21,"n":34,"op":"copy"},{"n":32,"op":"invalidate"}],"pristine":true},"view_id":"view-id-2"}}
2020-06-01T12:40:06.903172200-05:00 TRACE xrl::protocol::codec - <<< {"method":"update","params":{"update":{"annotations":[{"n":1,"payloads":null,"ranges":[[0,0,0,0]],"type":"selection"}],"ops":[{"ln":1,"n":86,"op":"copy"}],"pristine":true},"view_id":"view-id-2"}}
2020-06-01T12:40:06.904488669-05:00 TRACE xrl::protocol::codec - <<< {"method":"update","params":{"update":{"annotations":[{"n":1,"payloads":null,"ranges":[[0,0,0,0]],"type":"selection"}],"ops":[{"ln":1,"n":20,"op":"copy"},{"lines":[{"ln":21,"styles":[0,1,8],"text":"\n"},{"ln":22,"styles":[0,3,10,0,1,8,0,3,10,0,7,8],"text":"pub mod core;\n"},{"ln":23,"styles":[0,3,10,0,1,8,0,3,10,0,5,8],"text":"pub mod ui;\n"},{"ln":24,"styles":[0,3,10,0,1,8,0,3,10,0,10,8],"text":"pub mod widgets;\n"},{"ln":25,"styles":[0,3,10,0,1,8,0,3,10,0,13,8],"text":"pub mod components;\n"},{"ln":26,"styles":[0,1,8],"text":"\n"},{"ln":27,"styles":[0,3,10,0,1,8,0,3,10,0,17,8],"text":"pub use failure::Error;\n"},{"ln":28,"styles":[0,3,10,0,36,8],"text":"use futures::{future, Future, Stream};\n"},{"ln":29,"styles":[0,3,10,0,13,8],"text":"use xrl::spawn;\n"},{"ln":30,"styles":[0,1,8],"text":"\n"}],"n":10,"op":"ins"},{"n":10,"op":"skip"},{"ln":31,"n":24,"op":"copy"},{"n":32,"op":"invalidate"}],"pristine":true},"view_id":"view-id-2"}}
2020-06-01T12:40:06.908560473-05:00 TRACE xrl::protocol::codec - <<< {"method":"update","params":{"update":{"annotations":[{"n":1,"payloads":null,"ranges":[[0,0,0,0]],"type":"selection"}],"ops":[{"ln":1,"n":86,"op":"copy"}],"pristine":true},"view_id":"view-id-2"}}
2020-06-01T12:40:06.909722955-05:00 TRACE xrl::protocol::codec - <<< {"method":"def_style","params":{"fg_color":4286143907,"id":12,"weight":700}}
2020-06-01T12:40:06.910364968-05:00 TRACE xrl::protocol::codec - <<< {"method":"def_style","params":{"fg_color":4278224563,"id":13}}
2020-06-01T12:40:06.911088410-05:00 TRACE xrl::protocol::codec - <<< {"method":"update","params":{"update":{"annotations":[{"n":1,"payloads":null,"ranges":[[0,0,0,0]],"type":"selection"}],"ops":[{"ln":1,"n":30,"op":"copy"},{"lines":[{"ln":31,"styles":[0,3,10,0,37,8],"text":"use ui::{XiTerm, XiTermServiceBuilder};\n"},{"ln":32,"styles":[0,1,8],"text":"\n"},{"ln":33,"styles":[0,3,10,0,1,8,0,2,10,0,1,8,0,3,12,0,6,8,0,6,13,0,14,8],"text":"pub fn run() -> Result<(), Error> {\n"},{"ln":34,"styles":[0,4,8,0,3,10,0,4,8,0,1,10,0,12,8],"text":"    let xi = clap_app!(\n"},{"ln":35,"styles":[0,11,8,0,2,10,0,1,8],"text":"        xi =>\n"},{"ln":36,"styles":[0,16,8,0,15,11,0,2,8],"text":"        (about: \"The Xi Editor\")\n"},{"ln":37,"styles":[0,9,8,0,1,10,0,10,8,0,1,10,0,2,8,0,2,10,0,5,8,0,1,10,0,12,8,0,39,11,0,2,8],"text":"        (@arg core: -c --core +takes_value \"Specify binary to use for the backend\")\n"},{"ln":38,"styles":[0,9,8,0,1,10,0,13,8,0,1,10,0,2,8,0,2,10,0,8,8,0,1,10,0,12,8,0,19,11,0,2,8],"text":"        (@arg logfile: -l --logfile +takes_value \"Log file location\")\n"},{"ln":39,"styles":[0,9,8,0,1,10,0,10,8,0,1,10,0,9,8,0,14,11,0,4,8],"text":"        (@arg file: +required \"File to edit\"));\n"},{"ln":40,"styles":[0,1,8],"text":"\n"}],"n":10,"op":"ins"},{"n":10,"op":"skip"},{"ln":41,"n":14,"op":"copy"},{"n":32,"op":"invalidate"}],"pristine":true},"view_id":"view-id-2"}}
2020-06-01T12:40:06.916405085-05:00 TRACE xrl::protocol::codec - <<< {"method":"update","params":{"update":{"annotations":[{"n":1,"payloads":null,"ranges":[[0,0,0,0]],"type":"selection"}],"ops":[{"ln":1,"n":86,"op":"copy"}],"pristine":true},"view_id":"view-id-2"}}
2020-06-01T12:40:06.917743488-05:00 TRACE xrl::protocol::codec - <<< {"method":"def_style","params":{"fg_color":4284654428,"id":14}}
2020-06-01T12:40:06.918507211-05:00 TRACE xrl::protocol::codec - <<< {"method":"update","params":{"update":{"annotations":[{"n":1,"payloads":null,"ranges":[[0,0,0,0]],"type":"selection"}],"ops":[{"ln":1,"n":40,"op":"copy"},{"lines":[{"ln":41,"styles":[0,4,8,0,3,10,0,9,8,0,1,10,0,4,8,0,11,14,0,4,8],"text":"    let matches = xi.get_matches();\n"},{"ln":42,"styles":[0,4,8,0,2,10,0,1,8,0,3,10,0,1,8,0,4,13,0,10,8,0,1,10,0,9,8,0,8,14,0,1,8,0,9,11,0,4,8],"text":"    if let Some(logfile) = matches.value_of(\"logfile\") {\n"},{"ln":43,"styles":[0,39,8],"text":"        core::configure_logs(logfile);\n"},{"ln":44,"styles":[0,6,8],"text":"    }\n"},{"ln":45,"styles":[0,32,8],"text":"    core::init_panic_handler();\n"},{"ln":46,"styles":[0,1,8],"text":"\n"},{"ln":47,"styles":[0,28,8,0,4,10,0,1,8,0,2,10,0,3,8],"text":"    tokio::run(future::lazy(move || {\n"},{"ln":48,"styles":[0,14,8,0,18,11,0,3,8],"text":"        info!(\"starting xi-core\");\n"},{"ln":49,"styles":[0,8,8,0,3,10,0,39,8,0,1,10,0,30,8],"text":"        let (tui_service_builder, core_events_rx) = XiTermServiceBuilder::new();\n"},{"ln":50,"styles":[0,8,8,0,3,10,0,23,8,0,1,10,0,1,8,0,5,14,0,2,8],"text":"        let (client, core_stderr) = spawn(\n"}],"n":10,"op":"ins"},{"n":10,"op":"skip"},{"ln":51,"n":4,"op":"copy"},{"n":32,"op":"invalidate"}],"pristine":true},"view_id":"view-id-2"}}
2020-06-01T12:40:06.923489228-05:00 TRACE xrl::protocol::codec - <<< {"method":"update","params":{"update":{"annotations":[{"n":1,"payloads":null,"ranges":[[0,0,0,0]],"type":"selection"}],"ops":[{"ln":1,"n":86,"op":"copy"}],"pristine":true},"view_id":"view-id-2"}}
2020-06-01T12:40:06.924785387-05:00 TRACE xrl::protocol::codec - <<< {"method":"update","params":{"update":{"annotations":[{"n":1,"payloads":null,"ranges":[[0,0,0,0]],"type":"selection"}],"ops":[{"ln":1,"n":50,"op":"copy"},{"lines":[{"ln":51,"styles":[0,20,8,0,8,14,0,1,8,0,6,11,0,2,8,0,9,14,0,1,8,0,9,11,0,3,8],"text":"            matches.value_of(\"core\").unwrap_or(\"xi-core\"),\n"},{"ln":52,"styles":[0,33,8],"text":"            tui_service_builder,\n"},{"ln":53,"styles":[0,10,8,0,6,14,0,4,8],"text":"        ).unwrap();\n"},{"ln":54,"styles":[0,1,8],"text":"\n"}],"n":4,"op":"ins"},{"n":32,"op":"invalidate"}],"pristine":true},"view_id":"view-id-2"}}
2020-06-01T12:40:06.927745802-05:00 TRACE xrl::protocol::codec - <<< {"method":"update","params":{"update":{"annotations":[{"n":1,"payloads":null,"ranges":[[0,0,0,0]],"type":"selection"}],"ops":[{"ln":1,"n":86,"op":"copy"}],"pristine":true},"view_id":"view-id-2"}}
2020-06-01T12:40:06.929367941-05:00 TRACE xrl::protocol::codec - <<< {"method":"update","params":{"update":{"annotations":[{"n":1,"payloads":null,"ranges":[[0,0,0,0]],"type":"selection"}],"ops":[{"ln":1,"n":86,"op":"copy"}],"pristine":true},"view_id":"view-id-2"}}
2020-06-01T12:40:06.931039342-05:00 TRACE xrl::protocol::codec - <<< {"method":"update","params":{"update":{"annotations":[{"n":1,"payloads":null,"ranges":[[0,0,0,0]],"type":"selection"}],"ops":[{"ln":1,"n":86,"op":"copy"}],"pristine":true},"view_id":"view-id-2"}}
2020-06-01T12:40:06.932266351-05:00 TRACE xrl::protocol::codec - <<< {"method":"update","params":{"update":{"annotations":[{"n":1,"payloads":null,"ranges":[[0,0,0,0]],"type":"selection"}],"ops":[{"ln":1,"n":86,"op":"copy"}],"pristine":true},"view_id":"view-id-2"}}
2020-06-01T12:40:06.933491170-05:00 TRACE xrl::protocol::codec - <<< {"method":"update","params":{"update":{"annotations":[{"n":1,"payloads":null,"ranges":[[0,0,0,0]],"type":"selection"}],"ops":[{"ln":1,"n":86,"op":"copy"}],"pristine":true},"view_id":"view-id-2"}}
2020-06-01T12:40:06.934705953-05:00 TRACE xrl::protocol::codec - <<< {"method":"update","params":{"update":{"annotations":[{"n":1,"payloads":null,"ranges":[[0,0,0,0]],"type":"selection"}],"ops":[{"ln":1,"n":86,"op":"copy"}],"pristine":true},"view_id":"view-id-2"}}
2020-06-01T12:40:08.590471541-05:00 TRACE xrl::protocol::codec - >>> {"method":"edit","params":{"method":"insert","params":{"chars":"c"},"view_id":"view-id-2"}}
2020-06-01T12:46:18.702397498-05:00 TRACE xrl::protocol::codec - >>> {"method":"client_started","params":{"config_dir":"/home/bytebuddha/.config/xi/"}}
2020-06-01T12:46:18.709700764-05:00 TRACE xrl::protocol::codec - <<< {"method":"available_languages","params":{"languages":["ASP","ActionScript","AppleScript","Batch File","BibTeX","Bourne Again Shell (bash)","C","C#","C++","CSS","Clojure","D","Diff","Erlang","Git Attributes","Git Commit","Git Config","Git Ignore","Git Link","Git Log","Git Rebase Todo","Go","Graphviz (DOT)","Groovy","HTML","HTML (ASP)","HTML (Erlang)","HTML (Rails)","HTML (Tcl)","Haskell","JSON","Java","Java Properties","Java Server Page (JSP)","JavaScript","JavaScript (Rails)","LaTeX","Lisp","Literate Haskell","Lua","MATLAB","Makefile","Markdown","NAnt Build File","OCaml","OCamllex","OCamlyacc","Objective-C","Objective-C++","PHP","Pascal","Perl","Plain Text","Python","R","Rd (R Documentation)","Regular Expression","Ruby","Ruby Haml","Ruby on Rails","Rust","SQL","SQL (Rails)","Scala","TOML","Tcl","TeX","Textile","XML","YAML","reStructuredText"]}}
2020-06-01T12:46:18.712159981-05:00 TRACE xrl::protocol::codec - <<< {"method":"available_themes","params":{"themes":["InspiredGitHub","Solarized (dark)","Solarized (light)","base16-eighties.dark","base16-mocha.dark","base16-ocean.dark","base16-ocean.light"]}}
2020-06-01T12:46:18.714737659-05:00 TRACE xrl::protocol::codec - >>> {"id":1,"method":"new_view","params":{"file_path":"src/lib.rs"}}
2020-06-01T12:46:18.717532229-05:00 TRACE xrl::protocol::codec - <<< {"id":1,"result":"view-id-2"}
2020-06-01T12:46:18.717946287-05:00 TRACE xrl::protocol::codec - <<< {"method":"plugin_started","params":{"plugin":"xi-syntect-plugin","view_id":"view-id-2"}}
2020-06-01T12:46:18.718742595-05:00 TRACE xrl::protocol::codec - <<< {"method":"available_plugins","params":{"plugins":[{"name":"xi-syntect-plugin","running":true}],"view_id":"view-id-2"}}
2020-06-01T12:46:18.719628468-05:00 TRACE xrl::protocol::codec - <<< {"method":"config_changed","params":{"changes":{"auto_indent":true,"autodetect_whitespace":true,"font_face":"InconsolataGo","font_size":14,"line_ending":"\n","plugin_search_path":[],"save_with_newline":true,"scroll_past_end":false,"surrounding_pairs":[["\"","\""],["'","'"],["{","}"],["[","]"]],"tab_size":4,"translate_tabs_to_spaces":true,"use_tab_stops":true,"word_wrap":false,"wrap_width":0},"view_id":"view-id-2"}}
2020-06-01T12:46:18.721431581-05:00 TRACE xrl::protocol::codec - <<< {"method":"language_changed","params":{"language_id":"Rust","view_id":"view-id-2"}}
2020-06-01T12:46:18.722201238-05:00 TRACE xrl::protocol::codec - <<< {"method":"update","params":{"update":{"annotations":[{"n":1,"payloads":null,"ranges":[[0,0,0,0]],"type":"selection"}],"ops":[{"lines":[{"cursor":[0],"ln":1,"styles":[],"text":"#![cfg_attr(feature = \"clippy\", feature(plugin))]\n"},{"ln":2,"styles":[],"text":"#![cfg_attr(feature = \"clippy\", plugin(clippy))]\n"},{"ln":3,"styles":[],"text":"#![cfg_attr(feature = \"clippy\", deny(clippy))]\n"},{"ln":4,"styles":[],"text":"\n"},{"ln":5,"styles":[],"text":"#[macro_use]\n"},{"ln":6,"styles":[],"text":"extern crate clap;\n"},{"ln":7,"styles":[],"text":"\n"},{"ln":8,"styles":[],"text":"extern crate failure;\n"},{"ln":9,"styles":[],"text":"\n"},{"ln":10,"styles":[],"text":"#[macro_use]\n"},{"ln":11,"styles":[],"text":"extern crate log;\n"},{"ln":12,"styles":[],"text":"extern crate log4rs;\n"}],"n":12,"op":"ins"},{"n":74,"op":"invalidate"}],"pristine":true},"view_id":"view-id-2"}}
2020-06-01T12:46:18.726688859-05:00 TRACE xrl::protocol::codec - <<< {"method":"scroll_to","params":{"col":0,"line":0,"view_id":"view-id-2"}}
2020-06-01T12:46:18.735915221-05:00 TRACE xrl::protocol::codec - >>> {"method":"edit","params":{"method":"scroll","params":[0,52],"view_id":"view-id-2"}}
2020-06-01T12:46:18.737570201-05:00 TRACE xrl::protocol::codec - <<< {"method":"update","params":{"update":{"annotations":[{"n":1,"payloads":null,"ranges":[[0,0,0,0]],"type":"selection"}],"ops":[{"ln":1,"n":12,"op":"copy"},{"lines":[{"ln":13,"styles":[],"text":"\n"},{"ln":14,"styles":[],"text":"extern crate futures;\n"},{"ln":15,"styles":[],"text":"extern crate indexmap;\n"},{"ln":16,"styles":[],"text":"extern crate crossterm;\n"},{"ln":17,"styles":[],"text":"extern crate tokio;\n"},{"ln":18,"styles":[],"text":"extern crate xdg;\n"},{"ln":19,"styles":[],"text":"extern crate xrl;\n"},{"ln":20,"styles":[],"text":"extern crate tui;\n"},{"ln":21,"styles":[],"text":"\n"},{"ln":22,"styles":[],"text":"pub mod core;\n"},{"ln":23,"styles":[],"text":"pub mod ui;\n"},{"ln":24,"styles":[],"text":"pub mod widgets;\n"},{"ln":25,"styles":[],"text":"pub mod components;\n"},{"ln":26,"styles":[],"text":"\n"},{"ln":27,"styles":[],"text":"pub use failure::Error;\n"},{"ln":28,"styles":[],"text":"use futures::{future, Future, Stream};\n"},{"ln":29,"styles":[],"text":"use xrl::spawn;\n"},{"ln":30,"styles":[],"text":"\n"},{"ln":31,"styles":[],"text":"use ui::{XiTerm, XiTermServiceBuilder};\n"},{"ln":32,"styles":[],"text":"\n"},{"ln":33,"styles":[],"text":"pub fn run() -> Result<(), Error> {\n"},{"ln":34,"styles":[],"text":"    let xi = clap_app!(\n"},{"ln":35,"styles":[],"text":"        xi =>\n"},{"ln":36,"styles":[],"text":"        (about: \"The Xi Editor\")\n"},{"ln":37,"styles":[],"text":"        (@arg core: -c --core +takes_value \"Specify binary to use for the backend\")\n"},{"ln":38,"styles":[],"text":"        (@arg logfile: -l --logfile +takes_value \"Log file location\")\n"},{"ln":39,"styles":[],"text":"        (@arg file: +required \"File to edit\"));\n"},{"ln":40,"styles":[],"text":"\n"},{"ln":41,"styles":[],"text":"    let matches = xi.get_matches();\n"},{"ln":42,"styles":[],"text":"    if let Some(logfile) = matches.value_of(\"logfile\") {\n"},{"ln":43,"styles":[],"text":"        core::configure_logs(logfile);\n"},{"ln":44,"styles":[],"text":"    }\n"},{"ln":45,"styles":[],"text":"    core::init_panic_handler();\n"},{"ln":46,"styles":[],"text":"\n"},{"ln":47,"styles":[],"text":"    tokio::run(future::lazy(move || {\n"},{"ln":48,"styles":[],"text":"        info!(\"starting xi-core\");\n"},{"ln":49,"styles":[],"text":"        let (tui_service_builder, core_events_rx) = XiTermServiceBuilder::new();\n"},{"ln":50,"styles":[],"text":"        let (client, core_stderr) = spawn(\n"},{"ln":51,"styles":[],"text":"            matches.value_of(\"core\").unwrap_or(\"xi-core\"),\n"},{"ln":52,"styles":[],"text":"            tui_service_builder,\n"},{"ln":53,"styles":[],"text":"        ).unwrap();\n"},{"ln":54,"styles":[],"text":"\n"}],"n":42,"op":"ins"},{"n":32,"op":"invalidate"}],"pristine":true},"view_id":"view-id-2"}}
2020-06-01T12:46:18.767675275-05:00 TRACE xrl::protocol::codec - <<< {"method":"update","params":{"update":{"annotations":[{"n":1,"payloads":null,"ranges":[[0,0,0,0]],"type":"selection"}],"ops":[{"ln":1,"n":86,"op":"copy"}],"pristine":true},"view_id":"view-id-2"}}
2020-06-01T12:46:18.768773398-05:00 TRACE xrl::protocol::codec - <<< {"method":"def_style","params":{"fg_color":4281479730,"id":8}}
2020-06-01T12:46:18.769454507-05:00 TRACE xrl::protocol::codec - <<< {"method":"def_style","params":{"fg_color":4281479730,"id":9}}
2020-06-01T12:46:18.770094062-05:00 TRACE xrl::protocol::codec - <<< {"method":"def_style","params":{"fg_color":4289142109,"id":10,"weight":700}}
2020-06-01T12:46:18.770782603-05:00 TRACE xrl::protocol::codec - <<< {"method":"def_style","params":{"fg_color":4279776913,"id":11}}
2020-06-01T12:46:18.771539699-05:00 TRACE xrl::protocol::codec - <<< {"method":"update","params":{"update":{"annotations":[{"n":1,"payloads":null,"ranges":[[0,0,0,0]],"type":"selection"}],"ops":[{"lines":[{"cursor":[0],"ln":1,"styles":[0,3,8,0,8,9,0,9,8,0,1,10,0,1,8,0,8,11,0,2,8,0,7,9,0,11,8],"text":"#![cfg_attr(feature = \"clippy\", feature(plugin))]\n"},{"ln":2,"styles":[0,3,8,0,8,9,0,9,8,0,1,10,0,1,8,0,8,11,0,2,8,0,6,9,0,11,8],"text":"#![cfg_attr(feature = \"clippy\", plugin(clippy))]\n"},{"ln":3,"styles":[0,3,8,0,8,9,0,9,8,0,1,10,0,1,8,0,8,11,0,2,8,0,4,9,0,11,8],"text":"#![cfg_attr(feature = \"clippy\", deny(clippy))]\n"},{"ln":4,"styles":[0,1,8],"text":"\n"},{"ln":5,"styles":[0,2,8,0,9,9,0,2,8],"text":"#[macro_use]\n"},{"ln":6,"styles":[0,6,10,0,1,8,0,5,10,0,7,8],"text":"extern crate clap;\n"},{"ln":7,"styles":[0,1,8],"text":"\n"},{"ln":8,"styles":[0,6,10,0,1,8,0,5,10,0,10,8],"text":"extern crate failure;\n"},{"ln":9,"styles":[0,1,8],"text":"\n"},{"ln":10,"styles":[0,2,8,0,9,9,0,2,8],"text":"#[macro_use]\n"}],"n":10,"op":"ins"},{"n":10,"op":"skip"},{"ln":11,"n":44,"op":"copy"},{"n":32,"op":"invalidate"}],"pristine":true},"view_id":"view-id-2"}}
2020-06-01T12:46:18.776353255-05:00 TRACE xrl::protocol::codec - <<< {"method":"update","params":{"update":{"annotations":[{"n":1,"payloads":null,"ranges":[[0,0,0,0]],"type":"selection"}],"ops":[{"ln":1,"n":10,"op":"copy"},{"lines":[{"ln":11,"styles":[0,6,10,0,1,8,0,5,10,0,6,8],"text":"extern crate log;\n"},{"ln":12,"styles":[0,6,10,0,1,8,0,5,10,0,9,8],"text":"extern crate log4rs;\n"},{"ln":13,"styles":[0,1,8],"text":"\n"},{"ln":14,"styles":[0,6,10,0,1,8,0,5,10,0,10,8],"text":"extern crate futures;\n"},{"ln":15,"styles":[0,6,10,0,1,8,0,5,10,0,11,8],"text":"extern crate indexmap;\n"},{"ln":16,"styles":[0,6,10,0,1,8,0,5,10,0,12,8],"text":"extern crate crossterm;\n"},{"ln":17,"styles":[0,6,10,0,1,8,0,5,10,0,8,8],"text":"extern crate tokio;\n"},{"ln":18,"styles":[0,6,10,0,1,8,0,5,10,0,6,8],"text":"extern crate xdg;\n"},{"ln":19,"styles":[0,6,10,0,1,8,0,5,10,0,6,8],"text":"extern crate xrl;\n"},{"ln":20,"styles":[0,6,10,0,1,8,0,5,10,0,6,8],"text":"extern crate tui;\n"}],"n":10,"op":"ins"},{"n":10,"op":"skip"},{"ln":21,"n":34,"op":"copy"},{"n":32,"op":"invalidate"}],"pristine":true},"view_id":"view-id-2"}}
2020-06-01T12:46:18.782258116-05:00 TRACE xrl::protocol::codec - <<< {"method":"update","params":{"update":{"annotations":[{"n":1,"payloads":null,"ranges":[[0,0,0,0]],"type":"selection"}],"ops":[{"ln":1,"n":86,"op":"copy"}],"pristine":true},"view_id":"view-id-2"}}
2020-06-01T12:46:18.783620240-05:00 TRACE xrl::protocol::codec - <<< {"method":"update","params":{"update":{"annotations":[{"n":1,"payloads":null,"ranges":[[0,0,0,0]],"type":"selection"}],"ops":[{"ln":1,"n":20,"op":"copy"},{"lines":[{"ln":21,"styles":[0,1,8],"text":"\n"},{"ln":22,"styles":[0,3,10,0,1,8,0,3,10,0,7,8],"text":"pub mod core;\n"},{"ln":23,"styles":[0,3,10,0,1,8,0,3,10,0,5,8],"text":"pub mod ui;\n"},{"ln":24,"styles":[0,3,10,0,1,8,0,3,10,0,10,8],"text":"pub mod widgets;\n"},{"ln":25,"styles":[0,3,10,0,1,8,0,3,10,0,13,8],"text":"pub mod components;\n"},{"ln":26,"styles":[0,1,8],"text":"\n"},{"ln":27,"styles":[0,3,10,0,1,8,0,3,10,0,17,8],"text":"pub use failure::Error;\n"},{"ln":28,"styles":[0,3,10,0,36,8],"text":"use futures::{future, Future, Stream};\n"},{"ln":29,"styles":[0,3,10,0,13,8],"text":"use xrl::spawn;\n"},{"ln":30,"styles":[0,1,8],"text":"\n"}],"n":10,"op":"ins"},{"n":10,"op":"skip"},{"ln":31,"n":24,"op":"copy"},{"n":32,"op":"invalidate"}],"pristine":true},"view_id":"view-id-2"}}
2020-06-01T12:46:18.787797257-05:00 TRACE xrl::protocol::codec - <<< {"method":"update","params":{"update":{"annotations":[{"n":1,"payloads":null,"ranges":[[0,0,0,0]],"type":"selection"}],"ops":[{"ln":1,"n":86,"op":"copy"}],"pristine":true},"view_id":"view-id-2"}}
2020-06-01T12:46:18.789023514-05:00 TRACE xrl::protocol::codec - <<< {"method":"def_style","params":{"fg_color":4286143907,"id":12,"weight":700}}
2020-06-01T12:46:18.789730684-05:00 TRACE xrl::protocol::codec - <<< {"method":"def_style","params":{"fg_color":4278224563,"id":13}}
2020-06-01T12:46:18.790538636-05:00 TRACE xrl::protocol::codec - <<< {"method":"update","params":{"update":{"annotations":[{"n":1,"payloads":null,"ranges":[[0,0,0,0]],"type":"selection"}],"ops":[{"ln":1,"n":30,"op":"copy"},{"lines":[{"ln":31,"styles":[0,3,10,0,37,8],"text":"use ui::{XiTerm, XiTermServiceBuilder};\n"},{"ln":32,"styles":[0,1,8],"text":"\n"},{"ln":33,"styles":[0,3,10,0,1,8,0,2,10,0,1,8,0,3,12,0,6,8,0,6,13,0,14,8],"text":"pub fn run() -> Result<(), Error> {\n"},{"ln":34,"styles":[0,4,8,0,3,10,0,4,8,0,1,10,0,12,8],"text":"    let xi = clap_app!(\n"},{"ln":35,"styles":[0,11,8,0,2,10,0,1,8],"text":"        xi =>\n"},{"ln":36,"styles":[0,16,8,0,15,11,0,2,8],"text":"        (about: \"The Xi Editor\")\n"},{"ln":37,"styles":[0,9,8,0,1,10,0,10,8,0,1,10,0,2,8,0,2,10,0,5,8,0,1,10,0,12,8,0,39,11,0,2,8],"text":"        (@arg core: -c --core +takes_value \"Specify binary to use for the backend\")\n"},{"ln":38,"styles":[0,9,8,0,1,10,0,13,8,0,1,10,0,2,8,0,2,10,0,8,8,0,1,10,0,12,8,0,19,11,0,2,8],"text":"        (@arg logfile: -l --logfile +takes_value \"Log file location\")\n"},{"ln":39,"styles":[0,9,8,0,1,10,0,10,8,0,1,10,0,9,8,0,14,11,0,4,8],"text":"        (@arg file: +required \"File to edit\"));\n"},{"ln":40,"styles":[0,1,8],"text":"\n"}],"n":10,"op":"ins"},{"n":10,"op":"skip"},{"ln":41,"n":14,"op":"copy"},{"n":32,"op":"invalidate"}],"pristine":true},"view_id":"view-id-2"}}
2020-06-01T12:46:18.795843936-05:00 TRACE xrl::protocol::codec - <<< {"method":"update","params":{"update":{"annotations":[{"n":1,"payloads":null,"ranges":[[0,0,0,0]],"type":"selection"}],"ops":[{"ln":1,"n":86,"op":"copy"}],"pristine":true},"view_id":"view-id-2"}}
2020-06-01T12:46:18.797112863-05:00 TRACE xrl::protocol::codec - <<< {"method":"def_style","params":{"fg_color":4284654428,"id":14}}
2020-06-01T12:46:18.797899022-05:00 TRACE xrl::protocol::codec - <<< {"method":"update","params":{"update":{"annotations":[{"n":1,"payloads":null,"ranges":[[0,0,0,0]],"type":"selection"}],"ops":[{"ln":1,"n":40,"op":"copy"},{"lines":[{"ln":41,"styles":[0,4,8,0,3,10,0,9,8,0,1,10,0,4,8,0,11,14,0,4,8],"text":"    let matches = xi.get_matches();\n"},{"ln":42,"styles":[0,4,8,0,2,10,0,1,8,0,3,10,0,1,8,0,4,13,0,10,8,0,1,10,0,9,8,0,8,14,0,1,8,0,9,11,0,4,8],"text":"    if let Some(logfile) = matches.value_of(\"logfile\") {\n"},{"ln":43,"styles":[0,39,8],"text":"        core::configure_logs(logfile);\n"},{"ln":44,"styles":[0,6,8],"text":"    }\n"},{"ln":45,"styles":[0,32,8],"text":"    core::init_panic_handler();\n"},{"ln":46,"styles":[0,1,8],"text":"\n"},{"ln":47,"styles":[0,28,8,0,4,10,0,1,8,0,2,10,0,3,8],"text":"    tokio::run(future::lazy(move || {\n"},{"ln":48,"styles":[0,14,8,0,18,11,0,3,8],"text":"        info!(\"starting xi-core\");\n"},{"ln":49,"styles":[0,8,8,0,3,10,0,39,8,0,1,10,0,30,8],"text":"        let (tui_service_builder, core_events_rx) = XiTermServiceBuilder::new();\n"},{"ln":50,"styles":[0,8,8,0,3,10,0,23,8,0,1,10,0,1,8,0,5,14,0,2,8],"text":"        let (client, core_stderr) = spawn(\n"}],"n":10,"op":"ins"},{"n":10,"op":"skip"},{"ln":51,"n":4,"op":"copy"},{"n":32,"op":"invalidate"}],"pristine":true},"view_id":"view-id-2"}}
2020-06-01T12:46:18.802834831-05:00 TRACE xrl::protocol::codec - <<< {"method":"update","params":{"update":{"annotations":[{"n":1,"payloads":null,"ranges":[[0,0,0,0]],"type":"selection"}],"ops":[{"ln":1,"n":86,"op":"copy"}],"pristine":true},"view_id":"view-id-2"}}
2020-06-01T12:46:18.804096961-05:00 TRACE xrl::protocol::codec - <<< {"method":"update","params":{"update":{"annotations":[{"n":1,"payloads":null,"ranges":[[0,0,0,0]],"type":"selection"}],"ops":[{"ln":1,"n":50,"op":"copy"},{"lines":[{"ln":51,"styles":[0,20,8,0,8,14,0,1,8,0,6,11,0,2,8,0,9,14,0,1,8,0,9,11,0,3,8],"text":"            matches.value_of(\"core\").unwrap_or(\"xi-core\"),\n"},{"ln":52,"styles":[0,33,8],"text":"            tui_service_builder,\n"},{"ln":53,"styles":[0,10,8,0,6,14,0,4,8],"text":"        ).unwrap();\n"},{"ln":54,"styles":[0,1,8],"text":"\n"}],"n":4,"op":"ins"},{"n":32,"op":"invalidate"}],"pristine":true},"view_id":"view-id-2"}}
2020-06-01T12:46:18.806748293-05:00 TRACE xrl::protocol::codec - <<< {"method":"update","params":{"update":{"annotations":[{"n":1,"payloads":null,"ranges":[[0,0,0,0]],"type":"selection"}],"ops":[{"ln":1,"n":86,"op":"copy"}],"pristine":true},"view_id":"view-id-2"}}
2020-06-01T12:46:18.807991335-05:00 TRACE xrl::protocol::codec - <<< {"method":"update","params":{"update":{"annotations":[{"n":1,"payloads":null,"ranges":[[0,0,0,0]],"type":"selection"}],"ops":[{"ln":1,"n":86,"op":"copy"}],"pristine":true},"view_id":"view-id-2"}}
2020-06-01T12:46:18.809605835-05:00 TRACE xrl::protocol::codec - <<< {"method":"update","params":{"update":{"annotations":[{"n":1,"payloads":null,"ranges":[[0,0,0,0]],"type":"selection"}],"ops":[{"ln":1,"n":86,"op":"copy"}],"pristine":true},"view_id":"view-id-2"}}
2020-06-01T12:46:18.810817932-05:00 TRACE xrl::protocol::codec - <<< {"method":"update","params":{"update":{"annotations":[{"n":1,"payloads":null,"ranges":[[0,0,0,0]],"type":"selection"}],"ops":[{"ln":1,"n":86,"op":"copy"}],"pristine":true},"view_id":"view-id-2"}}
2020-06-01T12:46:18.812071743-05:00 TRACE xrl::protocol::codec - <<< {"method":"update","params":{"update":{"annotations":[{"n":1,"payloads":null,"ranges":[[0,0,0,0]],"type":"selection"}],"ops":[{"ln":1,"n":86,"op":"copy"}],"pristine":true},"view_id":"view-id-2"}}
2020-06-01T12:46:18.813292510-05:00 TRACE xrl::protocol::codec - <<< {"method":"update","params":{"update":{"annotations":[{"n":1,"payloads":null,"ranges":[[0,0,0,0]],"type":"selection"}],"ops":[{"ln":1,"n":86,"op":"copy"}],"pristine":true},"view_id":"view-id-2"}}
2020-06-01T12:46:19.757773465-05:00 TRACE xrl::protocol::codec - >>> {"method":"edit","params":{"method":"insert","params":{"chars":"c"},"view_id":"view-id-2"}}
2020-06-01T12:53:20.541631116-05:00 TRACE xrl::protocol::codec - >>> {"method":"client_started","params":{"config_dir":"/home/bytebuddha/.config/xi/"}}
2020-06-01T12:53:20.548870514-05:00 TRACE xrl::protocol::codec - <<< {"method":"available_languages","params":{"languages":["ASP","ActionScript","AppleScript","Batch File","BibTeX","Bourne Again Shell (bash)","C","C#","C++","CSS","Clojure","D","Diff","Erlang","Git Attributes","Git Commit","Git Config","Git Ignore","Git Link","Git Log","Git Rebase Todo","Go","Graphviz (DOT)","Groovy","HTML","HTML (ASP)","HTML (Erlang)","HTML (Rails)","HTML (Tcl)","Haskell","JSON","Java","Java Properties","Java Server Page (JSP)","JavaScript","JavaScript (Rails)","LaTeX","Lisp","Literate Haskell","Lua","MATLAB","Makefile","Markdown","NAnt Build File","OCaml","OCamllex","OCamlyacc","Objective-C","Objective-C++","PHP","Pascal","Perl","Plain Text","Python","R","Rd (R Documentation)","Regular Expression","Ruby","Ruby Haml","Ruby on Rails","Rust","SQL","SQL (Rails)","Scala","TOML","Tcl","TeX","Textile","XML","YAML","reStructuredText"]}}
2020-06-01T12:53:20.552430910-05:00 TRACE xrl::protocol::codec - <<< {"method":"available_themes","params":{"themes":["InspiredGitHub","Solarized (dark)","Solarized (light)","base16-eighties.dark","base16-mocha.dark","base16-ocean.dark","base16-ocean.light"]}}
2020-06-01T12:53:20.554906526-05:00 TRACE xrl::protocol::codec - >>> {"id":1,"method":"new_view","params":{"file_path":"src/lib.rs"}}
2020-06-01T12:53:20.556254032-05:00 TRACE xrl::protocol::codec - <<< {"id":1,"result":"view-id-2"}
2020-06-01T12:53:20.556662043-05:00 TRACE xrl::protocol::codec - <<< {"method":"plugin_started","params":{"plugin":"xi-syntect-plugin","view_id":"view-id-2"}}
2020-06-01T12:53:20.557398654-05:00 TRACE xrl::protocol::codec - <<< {"method":"available_plugins","params":{"plugins":[{"name":"xi-syntect-plugin","running":true}],"view_id":"view-id-2"}}
2020-06-01T12:53:20.558367902-05:00 TRACE xrl::protocol::codec - <<< {"method":"config_changed","params":{"changes":{"auto_indent":true,"autodetect_whitespace":true,"font_face":"InconsolataGo","font_size":14,"line_ending":"\n","plugin_search_path":[],"save_with_newline":true,"scroll_past_end":false,"surrounding_pairs":[["\"","\""],["'","'"],["{","}"],["[","]"]],"tab_size":4,"translate_tabs_to_spaces":true,"use_tab_stops":true,"word_wrap":false,"wrap_width":0},"view_id":"view-id-2"}}
2020-06-01T12:53:20.560486582-05:00 TRACE xrl::protocol::codec - <<< {"method":"language_changed","params":{"language_id":"Rust","view_id":"view-id-2"}}
2020-06-01T12:53:20.561316729-05:00 TRACE xrl::protocol::codec - <<< {"method":"update","params":{"update":{"annotations":[{"n":1,"payloads":null,"ranges":[[0,0,0,0]],"type":"selection"}],"ops":[{"lines":[{"cursor":[0],"ln":1,"styles":[],"text":"#![cfg_attr(feature = \"clippy\", feature(plugin))]\n"},{"ln":2,"styles":[],"text":"#![cfg_attr(feature = \"clippy\", plugin(clippy))]\n"},{"ln":3,"styles":[],"text":"#![cfg_attr(feature = \"clippy\", deny(clippy))]\n"},{"ln":4,"styles":[],"text":"\n"},{"ln":5,"styles":[],"text":"#[macro_use]\n"},{"ln":6,"styles":[],"text":"extern crate clap;\n"},{"ln":7,"styles":[],"text":"\n"},{"ln":8,"styles":[],"text":"extern crate failure;\n"},{"ln":9,"styles":[],"text":"\n"},{"ln":10,"styles":[],"text":"#[macro_use]\n"},{"ln":11,"styles":[],"text":"extern crate log;\n"},{"ln":12,"styles":[],"text":"extern crate log4rs;\n"}],"n":12,"op":"ins"},{"n":74,"op":"invalidate"}],"pristine":true},"view_id":"view-id-2"}}
2020-06-01T12:53:20.564529217-05:00 TRACE xrl::protocol::codec - <<< {"method":"scroll_to","params":{"col":0,"line":0,"view_id":"view-id-2"}}
2020-06-01T12:53:20.566940463-05:00 TRACE xrl::protocol::codec - >>> {"method":"edit","params":{"method":"scroll","params":[0,52],"view_id":"view-id-2"}}
2020-06-01T12:53:20.568329771-05:00 TRACE xrl::protocol::codec - <<< {"method":"update","params":{"update":{"annotations":[{"n":1,"payloads":null,"ranges":[[0,0,0,0]],"type":"selection"}],"ops":[{"ln":1,"n":12,"op":"copy"},{"lines":[{"ln":13,"styles":[],"text":"\n"},{"ln":14,"styles":[],"text":"extern crate futures;\n"},{"ln":15,"styles":[],"text":"extern crate indexmap;\n"},{"ln":16,"styles":[],"text":"extern crate crossterm;\n"},{"ln":17,"styles":[],"text":"extern crate tokio;\n"},{"ln":18,"styles":[],"text":"extern crate xdg;\n"},{"ln":19,"styles":[],"text":"extern crate xrl;\n"},{"ln":20,"styles":[],"text":"extern crate tui;\n"},{"ln":21,"styles":[],"text":"\n"},{"ln":22,"styles":[],"text":"pub mod core;\n"},{"ln":23,"styles":[],"text":"pub mod ui;\n"},{"ln":24,"styles":[],"text":"pub mod widgets;\n"},{"ln":25,"styles":[],"text":"pub mod components;\n"},{"ln":26,"styles":[],"text":"\n"},{"ln":27,"styles":[],"text":"pub use failure::Error;\n"},{"ln":28,"styles":[],"text":"use futures::{future, Future, Stream};\n"},{"ln":29,"styles":[],"text":"use xrl::spawn;\n"},{"ln":30,"styles":[],"text":"\n"},{"ln":31,"styles":[],"text":"use ui::{XiTerm, XiTermServiceBuilder};\n"},{"ln":32,"styles":[],"text":"\n"},{"ln":33,"styles":[],"text":"pub fn run() -> Result<(), Error> {\n"},{"ln":34,"styles":[],"text":"    let xi = clap_app!(\n"},{"ln":35,"styles":[],"text":"        xi =>\n"},{"ln":36,"styles":[],"text":"        (about: \"The Xi Editor\")\n"},{"ln":37,"styles":[],"text":"        (@arg core: -c --core +takes_value \"Specify binary to use for the backend\")\n"},{"ln":38,"styles":[],"text":"        (@arg logfile: -l --logfile +takes_value \"Log file location\")\n"},{"ln":39,"styles":[],"text":"        (@arg file: +required \"File to edit\"));\n"},{"ln":40,"styles":[],"text":"\n"},{"ln":41,"styles":[],"text":"    let matches = xi.get_matches();\n"},{"ln":42,"styles":[],"text":"    if let Some(logfile) = matches.value_of(\"logfile\") {\n"},{"ln":43,"styles":[],"text":"        core::configure_logs(logfile);\n"},{"ln":44,"styles":[],"text":"    }\n"},{"ln":45,"styles":[],"text":"    core::init_panic_handler();\n"},{"ln":46,"styles":[],"text":"\n"},{"ln":47,"styles":[],"text":"    tokio::run(future::lazy(move || {\n"},{"ln":48,"styles":[],"text":"        info!(\"starting xi-core\");\n"},{"ln":49,"styles":[],"text":"        let (tui_service_builder, core_events_rx) = XiTermServiceBuilder::new();\n"},{"ln":50,"styles":[],"text":"        let (client, core_stderr) = spawn(\n"},{"ln":51,"styles":[],"text":"            matches.value_of(\"core\").unwrap_or(\"xi-core\"),\n"},{"ln":52,"styles":[],"text":"            tui_service_builder,\n"},{"ln":53,"styles":[],"text":"        ).unwrap();\n"},{"ln":54,"styles":[],"text":"\n"}],"n":42,"op":"ins"},{"n":32,"op":"invalidate"}],"pristine":true},"view_id":"view-id-2"}}
2020-06-01T12:53:20.607219320-05:00 TRACE xrl::protocol::codec - <<< {"method":"update","params":{"update":{"annotations":[{"n":1,"payloads":null,"ranges":[[0,0,0,0]],"type":"selection"}],"ops":[{"ln":1,"n":86,"op":"copy"}],"pristine":true},"view_id":"view-id-2"}}
2020-06-01T12:53:20.608567993-05:00 TRACE xrl::protocol::codec - <<< {"method":"def_style","params":{"fg_color":4281479730,"id":8}}
2020-06-01T12:53:20.609187338-05:00 TRACE xrl::protocol::codec - <<< {"method":"def_style","params":{"fg_color":4281479730,"id":9}}
2020-06-01T12:53:20.609659581-05:00 TRACE xrl::protocol::codec - <<< {"method":"def_style","params":{"fg_color":4289142109,"id":10,"weight":700}}
2020-06-01T12:53:20.610329551-05:00 TRACE xrl::protocol::codec - <<< {"method":"def_style","params":{"fg_color":4279776913,"id":11}}
2020-06-01T12:53:20.611033489-05:00 TRACE xrl::protocol::codec - <<< {"method":"update","params":{"update":{"annotations":[{"n":1,"payloads":null,"ranges":[[0,0,0,0]],"type":"selection"}],"ops":[{"lines":[{"cursor":[0],"ln":1,"styles":[0,3,8,0,8,9,0,9,8,0,1,10,0,1,8,0,8,11,0,2,8,0,7,9,0,11,8],"text":"#![cfg_attr(feature = \"clippy\", feature(plugin))]\n"},{"ln":2,"styles":[0,3,8,0,8,9,0,9,8,0,1,10,0,1,8,0,8,11,0,2,8,0,6,9,0,11,8],"text":"#![cfg_attr(feature = \"clippy\", plugin(clippy))]\n"},{"ln":3,"styles":[0,3,8,0,8,9,0,9,8,0,1,10,0,1,8,0,8,11,0,2,8,0,4,9,0,11,8],"text":"#![cfg_attr(feature = \"clippy\", deny(clippy))]\n"},{"ln":4,"styles":[0,1,8],"text":"\n"},{"ln":5,"styles":[0,2,8,0,9,9,0,2,8],"text":"#[macro_use]\n"},{"ln":6,"styles":[0,6,10,0,1,8,0,5,10,0,7,8],"text":"extern crate clap;\n"},{"ln":7,"styles":[0,1,8],"text":"\n"},{"ln":8,"styles":[0,6,10,0,1,8,0,5,10,0,10,8],"text":"extern crate failure;\n"},{"ln":9,"styles":[0,1,8],"text":"\n"},{"ln":10,"styles":[0,2,8,0,9,9,0,2,8],"text":"#[macro_use]\n"}],"n":10,"op":"ins"},{"n":10,"op":"skip"},{"ln":11,"n":44,"op":"copy"},{"n":32,"op":"invalidate"}],"pristine":true},"view_id":"view-id-2"}}
2020-06-01T12:53:20.615192068-05:00 TRACE xrl::protocol::codec - <<< {"method":"update","params":{"update":{"annotations":[{"n":1,"payloads":null,"ranges":[[0,0,0,0]],"type":"selection"}],"ops":[{"ln":1,"n":10,"op":"copy"},{"lines":[{"ln":11,"styles":[0,6,10,0,1,8,0,5,10,0,6,8],"text":"extern crate log;\n"},{"ln":12,"styles":[0,6,10,0,1,8,0,5,10,0,9,8],"text":"extern crate log4rs;\n"},{"ln":13,"styles":[0,1,8],"text":"\n"},{"ln":14,"styles":[0,6,10,0,1,8,0,5,10,0,10,8],"text":"extern crate futures;\n"},{"ln":15,"styles":[0,6,10,0,1,8,0,5,10,0,11,8],"text":"extern crate indexmap;\n"},{"ln":16,"styles":[0,6,10,0,1,8,0,5,10,0,12,8],"text":"extern crate crossterm;\n"},{"ln":17,"styles":[0,6,10,0,1,8,0,5,10,0,8,8],"text":"extern crate tokio;\n"},{"ln":18,"styles":[0,6,10,0,1,8,0,5,10,0,6,8],"text":"extern crate xdg;\n"},{"ln":19,"styles":[0,6,10,0,1,8,0,5,10,0,6,8],"text":"extern crate xrl;\n"},{"ln":20,"styles":[0,6,10,0,1,8,0,5,10,0,6,8],"text":"extern crate tui;\n"}],"n":10,"op":"ins"},{"n":10,"op":"skip"},{"ln":21,"n":34,"op":"copy"},{"n":32,"op":"invalidate"}],"pristine":true},"view_id":"view-id-2"}}
2020-06-01T12:53:20.619210736-05:00 TRACE xrl::protocol::codec - <<< {"method":"update","params":{"update":{"annotations":[{"n":1,"payloads":null,"ranges":[[0,0,0,0]],"type":"selection"}],"ops":[{"ln":1,"n":86,"op":"copy"}],"pristine":true},"view_id":"view-id-2"}}
2020-06-01T12:53:20.620126935-05:00 TRACE xrl::protocol::codec - <<< {"method":"update","params":{"update":{"annotations":[{"n":1,"payloads":null,"ranges":[[0,0,0,0]],"type":"selection"}],"ops":[{"ln":1,"n":20,"op":"copy"},{"lines":[{"ln":21,"styles":[0,1,8],"text":"\n"},{"ln":22,"styles":[0,3,10,0,1,8,0,3,10,0,7,8],"text":"pub mod core;\n"},{"ln":23,"styles":[0,3,10,0,1,8,0,3,10,0,5,8],"text":"pub mod ui;\n"},{"ln":24,"styles":[0,3,10,0,1,8,0,3,10,0,10,8],"text":"pub mod widgets;\n"},{"ln":25,"styles":[0,3,10,0,1,8,0,3,10,0,13,8],"text":"pub mod components;\n"},{"ln":26,"styles":[0,1,8],"text":"\n"},{"ln":27,"styles":[0,3,10,0,1,8,0,3,10,0,17,8],"text":"pub use failure::Error;\n"},{"ln":28,"styles":[0,3,10,0,36,8],"text":"use futures::{future, Future, Stream};\n"},{"ln":29,"styles":[0,3,10,0,13,8],"text":"use xrl::spawn;\n"},{"ln":30,"styles":[0,1,8],"text":"\n"}],"n":10,"op":"ins"},{"n":10,"op":"skip"},{"ln":31,"n":24,"op":"copy"},{"n":32,"op":"invalidate"}],"pristine":true},"view_id":"view-id-2"}}
2020-06-01T12:53:20.622850831-05:00 TRACE xrl::protocol::codec - <<< {"method":"update","params":{"update":{"annotations":[{"n":1,"payloads":null,"ranges":[[0,0,0,0]],"type":"selection"}],"ops":[{"ln":1,"n":86,"op":"copy"}],"pristine":true},"view_id":"view-id-2"}}
2020-06-01T12:53:20.623752528-05:00 TRACE xrl::protocol::codec - <<< {"method":"def_style","params":{"fg_color":4286143907,"id":12,"weight":700}}
2020-06-01T12:53:20.624280304-05:00 TRACE xrl::protocol::codec - <<< {"method":"def_style","params":{"fg_color":4278224563,"id":13}}
2020-06-01T12:53:20.624809453-05:00 TRACE xrl::protocol::codec - <<< {"method":"update","params":{"update":{"annotations":[{"n":1,"payloads":null,"ranges":[[0,0,0,0]],"type":"selection"}],"ops":[{"ln":1,"n":30,"op":"copy"},{"lines":[{"ln":31,"styles":[0,3,10,0,37,8],"text":"use ui::{XiTerm, XiTermServiceBuilder};\n"},{"ln":32,"styles":[0,1,8],"text":"\n"},{"ln":33,"styles":[0,3,10,0,1,8,0,2,10,0,1,8,0,3,12,0,6,8,0,6,13,0,14,8],"text":"pub fn run() -> Result<(), Error> {\n"},{"ln":34,"styles":[0,4,8,0,3,10,0,4,8,0,1,10,0,12,8],"text":"    let xi = clap_app!(\n"},{"ln":35,"styles":[0,11,8,0,2,10,0,1,8],"text":"        xi =>\n"},{"ln":36,"styles":[0,16,8,0,15,11,0,2,8],"text":"        (about: \"The Xi Editor\")\n"},{"ln":37,"styles":[0,9,8,0,1,10,0,10,8,0,1,10,0,2,8,0,2,10,0,5,8,0,1,10,0,12,8,0,39,11,0,2,8],"text":"        (@arg core: -c --core +takes_value \"Specify binary to use for the backend\")\n"},{"ln":38,"styles":[0,9,8,0,1,10,0,13,8,0,1,10,0,2,8,0,2,10,0,8,8,0,1,10,0,12,8,0,19,11,0,2,8],"text":"        (@arg logfile: -l --logfile +takes_value \"Log file location\")\n"},{"ln":39,"styles":[0,9,8,0,1,10,0,10,8,0,1,10,0,9,8,0,14,11,0,4,8],"text":"        (@arg file: +required \"File to edit\"));\n"},{"ln":40,"styles":[0,1,8],"text":"\n"}],"n":10,"op":"ins"},{"n":10,"op":"skip"},{"ln":41,"n":14,"op":"copy"},{"n":32,"op":"invalidate"}],"pristine":true},"view_id":"view-id-2"}}
2020-06-01T12:53:20.627880426-05:00 TRACE xrl::protocol::codec - <<< {"method":"update","params":{"update":{"annotations":[{"n":1,"payloads":null,"ranges":[[0,0,0,0]],"type":"selection"}],"ops":[{"ln":1,"n":86,"op":"copy"}],"pristine":true},"view_id":"view-id-2"}}
2020-06-01T12:53:20.628732617-05:00 TRACE xrl::protocol::codec - <<< {"method":"def_style","params":{"fg_color":4284654428,"id":14}}
2020-06-01T12:53:20.629263797-05:00 TRACE xrl::protocol::codec - <<< {"method":"update","params":{"update":{"annotations":[{"n":1,"payloads":null,"ranges":[[0,0,0,0]],"type":"selection"}],"ops":[{"ln":1,"n":40,"op":"copy"},{"lines":[{"ln":41,"styles":[0,4,8,0,3,10,0,9,8,0,1,10,0,4,8,0,11,14,0,4,8],"text":"    let matches = xi.get_matches();\n"},{"ln":42,"styles":[0,4,8,0,2,10,0,1,8,0,3,10,0,1,8,0,4,13,0,10,8,0,1,10,0,9,8,0,8,14,0,1,8,0,9,11,0,4,8],"text":"    if let Some(logfile) = matches.value_of(\"logfile\") {\n"},{"ln":43,"styles":[0,39,8],"text":"        core::configure_logs(logfile);\n"},{"ln":44,"styles":[0,6,8],"text":"    }\n"},{"ln":45,"styles":[0,32,8],"text":"    core::init_panic_handler();\n"},{"ln":46,"styles":[0,1,8],"text":"\n"},{"ln":47,"styles":[0,28,8,0,4,10,0,1,8,0,2,10,0,3,8],"text":"    tokio::run(future::lazy(move || {\n"},{"ln":48,"styles":[0,14,8,0,18,11,0,3,8],"text":"        info!(\"starting xi-core\");\n"},{"ln":49,"styles":[0,8,8,0,3,10,0,39,8,0,1,10,0,30,8],"text":"        let (tui_service_builder, core_events_rx) = XiTermServiceBuilder::new();\n"},{"ln":50,"styles":[0,8,8,0,3,10,0,23,8,0,1,10,0,1,8,0,5,14,0,2,8],"text":"        let (client, core_stderr) = spawn(\n"}],"n":10,"op":"ins"},{"n":10,"op":"skip"},{"ln":51,"n":4,"op":"copy"},{"n":32,"op":"invalidate"}],"pristine":true},"view_id":"view-id-2"}}
2020-06-01T12:53:20.632213066-05:00 TRACE xrl::protocol::codec - <<< {"method":"update","params":{"update":{"annotations":[{"n":1,"payloads":null,"ranges":[[0,0,0,0]],"type":"selection"}],"ops":[{"ln":1,"n":86,"op":"copy"}],"pristine":true},"view_id":"view-id-2"}}
2020-06-01T12:53:20.633236056-05:00 TRACE xrl::protocol::codec - <<< {"method":"update","params":{"update":{"annotations":[{"n":1,"payloads":null,"ranges":[[0,0,0,0]],"type":"selection"}],"ops":[{"ln":1,"n":50,"op":"copy"},{"lines":[{"ln":51,"styles":[0,20,8,0,8,14,0,1,8,0,6,11,0,2,8,0,9,14,0,1,8,0,9,11,0,3,8],"text":"            matches.value_of(\"core\").unwrap_or(\"xi-core\"),\n"},{"ln":52,"styles":[0,33,8],"text":"            tui_service_builder,\n"},{"ln":53,"styles":[0,10,8,0,6,14,0,4,8],"text":"        ).unwrap();\n"},{"ln":54,"styles":[0,1,8],"text":"\n"}],"n":4,"op":"ins"},{"n":32,"op":"invalidate"}],"pristine":true},"view_id":"view-id-2"}}
2020-06-01T12:53:20.635033908-05:00 TRACE xrl::protocol::codec - <<< {"method":"update","params":{"update":{"annotations":[{"n":1,"payloads":null,"ranges":[[0,0,0,0]],"type":"selection"}],"ops":[{"ln":1,"n":86,"op":"copy"}],"pristine":true},"view_id":"view-id-2"}}
2020-06-01T12:53:20.635894504-05:00 TRACE xrl::protocol::codec - <<< {"method":"update","params":{"update":{"annotations":[{"n":1,"payloads":null,"ranges":[[0,0,0,0]],"type":"selection"}],"ops":[{"ln":1,"n":86,"op":"copy"}],"pristine":true},"view_id":"view-id-2"}}
2020-06-01T12:53:20.637031519-05:00 TRACE xrl::protocol::codec - <<< {"method":"update","params":{"update":{"annotations":[{"n":1,"payloads":null,"ranges":[[0,0,0,0]],"type":"selection"}],"ops":[{"ln":1,"n":86,"op":"copy"}],"pristine":true},"view_id":"view-id-2"}}
2020-06-01T12:53:20.637903200-05:00 TRACE xrl::protocol::codec - <<< {"method":"update","params":{"update":{"annotations":[{"n":1,"payloads":null,"ranges":[[0,0,0,0]],"type":"selection"}],"ops":[{"ln":1,"n":86,"op":"copy"}],"pristine":true},"view_id":"view-id-2"}}
2020-06-01T12:53:20.638735267-05:00 TRACE xrl::protocol::codec - <<< {"method":"update","params":{"update":{"annotations":[{"n":1,"payloads":null,"ranges":[[0,0,0,0]],"type":"selection"}],"ops":[{"ln":1,"n":86,"op":"copy"}],"pristine":true},"view_id":"view-id-2"}}
2020-06-01T12:53:20.639571854-05:00 TRACE xrl::protocol::codec - <<< {"method":"update","params":{"update":{"annotations":[{"n":1,"payloads":null,"ranges":[[0,0,0,0]],"type":"selection"}],"ops":[{"ln":1,"n":86,"op":"copy"}],"pristine":true},"view_id":"view-id-2"}}
2020-06-01T12:53:23.034097546-05:00 TRACE xrl::protocol::codec - >>> {"method":"edit","params":{"method":"insert","params":{"chars":"w"},"view_id":"view-id-2"}}
2020-06-01T12:53:23.043900611-05:00 TRACE xrl::protocol::codec - <<< {"method":"update","params":{"update":{"annotations":[{"n":1,"payloads":null,"ranges":[[0,1,0,1]],"type":"selection"}],"ops":[{"lines":[{"cursor":[1],"ln":1,"styles":[0,4,8,0,8,9,0,9,8,0,1,10,0,1,8,0,8,11,0,2,8,0,7,9,0,11,8],"text":"w#![cfg_attr(feature = \"clippy\", feature(plugin))]\n"}],"n":1,"op":"ins"},{"n":1,"op":"skip"},{"ln":2,"n":53,"op":"copy"},{"n":32,"op":"invalidate"}],"pristine":false},"view_id":"view-id-2"}}
2020-06-01T12:53:23.046989063-05:00 TRACE xrl::protocol::codec - <<< {"method":"scroll_to","params":{"col":1,"line":0,"view_id":"view-id-2"}}
2020-06-01T12:53:23.146429684-05:00 TRACE xrl::protocol::codec - >>> {"method":"edit","params":{"method":"insert","params":{"chars":"e"},"view_id":"view-id-2"}}
2020-06-01T12:53:23.150327505-05:00 TRACE xrl::protocol::codec - <<< {"method":"update","params":{"update":{"annotations":[{"n":1,"payloads":null,"ranges":[[0,2,0,2]],"type":"selection"}],"ops":[{"lines":[{"cursor":[2],"ln":1,"styles":[0,5,8,0,8,9,0,9,8,0,1,10,0,1,8,0,8,11,0,2,8,0,7,9,0,11,8],"text":"we#![cfg_attr(feature = \"clippy\", feature(plugin))]\n"}],"n":1,"op":"ins"},{"n":1,"op":"skip"},{"ln":2,"n":53,"op":"copy"},{"n":32,"op":"invalidate"}],"pristine":false},"view_id":"view-id-2"}}
2020-06-01T12:53:23.153371726-05:00 TRACE xrl::protocol::codec - <<< {"method":"scroll_to","params":{"col":2,"line":0,"view_id":"view-id-2"}}
2020-06-01T12:53:23.281483475-05:00 TRACE xrl::protocol::codec - >>> {"method":"edit","params":{"method":"insert","params":{"chars":"l"},"view_id":"view-id-2"}}
2020-06-01T12:53:23.285543199-05:00 TRACE xrl::protocol::codec - <<< {"method":"update","params":{"update":{"annotations":[{"n":1,"payloads":null,"ranges":[[0,3,0,3]],"type":"selection"}],"ops":[{"lines":[{"cursor":[3],"ln":1,"styles":[0,6,8,0,8,9,0,9,8,0,1,10,0,1,8,0,8,11,0,2,8,0,7,9,0,11,8],"text":"wel#![cfg_attr(feature = \"clippy\", feature(plugin))]\n"}],"n":1,"op":"ins"},{"n":1,"op":"skip"},{"ln":2,"n":53,"op":"copy"},{"n":32,"op":"invalidate"}],"pristine":false},"view_id":"view-id-2"}}
2020-06-01T12:53:23.288785218-05:00 TRACE xrl::protocol::codec - <<< {"method":"scroll_to","params":{"col":3,"line":0,"view_id":"view-id-2"}}
2020-06-01T12:53:23.418186499-05:00 TRACE xrl::protocol::codec - >>> {"method":"edit","params":{"method":"insert","params":{"chars":"l"},"view_id":"view-id-2"}}
2020-06-01T12:53:23.423416566-05:00 TRACE xrl::protocol::codec - <<< {"method":"update","params":{"update":{"annotations":[{"n":1,"payloads":null,"ranges":[[0,4,0,4]],"type":"selection"}],"ops":[{"lines":[{"cursor":[4],"ln":1,"styles":[0,7,8,0,8,9,0,9,8,0,1,10,0,1,8,0,8,11,0,2,8,0,7,9,0,11,8],"text":"well#![cfg_attr(feature = \"clippy\", feature(plugin))]\n"}],"n":1,"op":"ins"},{"n":1,"op":"skip"},{"ln":2,"n":53,"op":"copy"},{"n":32,"op":"invalidate"}],"pristine":false},"view_id":"view-id-2"}}
2020-06-01T12:53:23.426699589-05:00 TRACE xrl::protocol::codec - <<< {"method":"scroll_to","params":{"col":4,"line":0,"view_id":"view-id-2"}}
2020-06-01T12:53:24.564792637-05:00 TRACE xrl::protocol::codec - >>> {"method":"edit","params":{"method":"insert","params":{"chars":"c"},"view_id":"view-id-2"}}
